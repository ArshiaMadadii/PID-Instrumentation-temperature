
AVRASM ver. 2.1.30  D:\Lesson\AVR\0-Project\AbzadDaghigh\PID-TEMP\Debug\List\PID - THEMP.asm Wed Jun 19 21:13:36 2024

D:\Lesson\AVR\0-Project\AbzadDaghigh\PID-TEMP\Debug\List\PID - THEMP.asm(1088): warning: Register r4 already defined by the .DEF directive
D:\Lesson\AVR\0-Project\AbzadDaghigh\PID-TEMP\Debug\List\PID - THEMP.asm(1089): warning: Register r5 already defined by the .DEF directive
D:\Lesson\AVR\0-Project\AbzadDaghigh\PID-TEMP\Debug\List\PID - THEMP.asm(1090): warning: Register r6 already defined by the .DEF directive
D:\Lesson\AVR\0-Project\AbzadDaghigh\PID-TEMP\Debug\List\PID - THEMP.asm(1091): warning: Register r7 already defined by the .DEF directive
D:\Lesson\AVR\0-Project\AbzadDaghigh\PID-TEMP\Debug\List\PID - THEMP.asm(1092): warning: Register r8 already defined by the .DEF directive
D:\Lesson\AVR\0-Project\AbzadDaghigh\PID-TEMP\Debug\List\PID - THEMP.asm(1093): warning: Register r9 already defined by the .DEF directive
D:\Lesson\AVR\0-Project\AbzadDaghigh\PID-TEMP\Debug\List\PID - THEMP.asm(1094): warning: Register r11 already defined by the .DEF directive
D:\Lesson\AVR\0-Project\AbzadDaghigh\PID-TEMP\Debug\List\PID - THEMP.asm(1095): warning: Register r10 already defined by the .DEF directive
D:\Lesson\AVR\0-Project\AbzadDaghigh\PID-TEMP\Debug\List\PID - THEMP.asm(1096): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : long, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _D2=R4
                 	.DEF _D2_msb=R5
                 	.DEF _LD=R6
                 	.DEF _LD_msb=R7
                 	.DEF _HD=R8
                 	.DEF _HD_msb=R9
                 	.DEF __lcd_x=R11
                 	.DEF __lcd_y=R10
                 	.DEF __lcd_maxx=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0062 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 008f 	JMP  _adc_isr
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x3:
00002a 0000
00002b 42c8      	.DB  0x0,0x0,0xC8,0x42
                 _0x4:
00002c cccd
00002d 3ccc      	.DB  0xCD,0xCC,0xCC,0x3C
                 _0x5:
00002e a882
00002f 36fb      	.DB  0x82,0xA8,0xFB,0x36
                 _0x6:
000030 0000
000031 3f80      	.DB  0x0,0x0,0x80,0x3F
                 _0x0:
000032 3d54
000033 3325
000034 312e
000035 2066      	.DB  0x54,0x3D,0x25,0x33,0x2E,0x31,0x66,0x20
000036 5053
000037 253d
000038 2e32
000039 6631      	.DB  0x53,0x50,0x3D,0x25,0x32,0x2E,0x31,0x66
00003a 0a20
00003b 704b
00003c 253d
00003d 2066      	.DB  0x20,0xA,0x4B,0x70,0x3D,0x25,0x66,0x20
00003e 4b0a
00003f 3d69
000040 6625
000041 0a20      	.DB  0xA,0x4B,0x69,0x3D,0x25,0x66,0x20,0xA
000042 644b
000043 253d
000044 0066      	.DB  0x4B,0x64,0x3D,0x25,0x66,0x0
                 _0x2000003:
000045 c080      	.DB  0x80,0xC0
                 _0x2020000:
000046 4e2d
000047 4e41
D:\Lesson\AVR\0-Project\AbzadDaghigh\PID-TEMP\Debug\List\PID - THEMP.asm(1144): warning: .cseg .db misalignment - padding zero byte
000048 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x20A0060:
D:\Lesson\AVR\0-Project\AbzadDaghigh\PID-TEMP\Debug\List\PID - THEMP.asm(1146): warning: .cseg .db misalignment - padding zero byte
000049 0001      	.DB  0x1
                 _0x20A0000:
00004a 4e2d
00004b 4e41
00004c 4900
00004d 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Lesson\AVR\0-Project\AbzadDaghigh\PID-TEMP\Debug\List\PID - THEMP.asm(1149): warning: .cseg .db misalignment - padding zero byte
00004e 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00004f 0004      	.DW  0x04
000050 02a0      	.DW  _SP
000051 0054      	.DW  _0x3*2
                 
000052 0004      	.DW  0x04
000053 02b4      	.DW  _kp
000054 0058      	.DW  _0x4*2
                 
000055 0004      	.DW  0x04
000056 02b8      	.DW  _ki
000057 005c      	.DW  _0x5*2
                 
000058 0004      	.DW  0x04
000059 02bc      	.DW  _kd
00005a 0060      	.DW  _0x6*2
                 
00005b 0002      	.DW  0x02
00005c 02d0      	.DW  __base_y_G100
00005d 008a      	.DW  _0x2000003*2
                 
00005e 0001      	.DW  0x01
00005f 02d4      	.DW  __seed_G105
000060 0092      	.DW  _0x20A0060*2
                 
                 _0xFFFFFFFF:
000061 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000062 94f8      	CLI
000063 27ee      	CLR  R30
000064 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000065 e0f1      	LDI  R31,1
000066 bffb      	OUT  GICR,R31
000067 bfeb      	OUT  GICR,R30
000068 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000069 e08d      	LDI  R24,(14-2)+1
00006a e0a2      	LDI  R26,2
00006b 27bb      	CLR  R27
                 __CLEAR_REG:
00006c 93ed      	ST   X+,R30
00006d 958a      	DEC  R24
00006e f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00006f e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000070 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000071 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000072 93ed      	ST   X+,R30
000073 9701      	SBIW R24,1
000074 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000075 e9ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000076 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000077 9185      	LPM  R24,Z+
000078 9195      	LPM  R25,Z+
000079 9700      	SBIW R24,0
00007a f061      	BREQ __GLOBAL_INI_END
00007b 91a5      	LPM  R26,Z+
00007c 91b5      	LPM  R27,Z+
00007d 9005      	LPM  R0,Z+
00007e 9015      	LPM  R1,Z+
00007f 01bf      	MOVW R22,R30
000080 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000081 9005      	LPM  R0,Z+
000082 920d      	ST   X+,R0
000083 9701      	SBIW R24,1
000084 f7e1      	BRNE __GLOBAL_INI_LOOP
000085 01fb      	MOVW R30,R22
000086 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000087 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000088 bfed      	OUT  SPL,R30
000089 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00008a bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00008b e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00008c e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00008d 940c 00cd 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*
                 ; * PID - Instrumentation
                 ; *
                 ; * Author:ArshiaMadadi
                 ; */
                 ;//LIB
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <mega32.h>
                 ;#include <delay.h>
                 ;#include <lcd.h>
                 ;#include <stdio.h> //scaf,printf
                 ;
                 ;#asm
                    .equ __lcd_port=0x15 ;PORTC
                 ; 0000 000F #endasm
                 ;
                 ;//Variable definition
                 ;    char buffer[64];
                 ;    float SP=100,temp,error,last_error,last_iterm,kp=.025,ki=.0000075,kd=1;//sp(0,100)
                 
                 	.DSEG
                 ;    float pterm,iterm,dterm,D;
                 ;    unsigned int  D2,LD,HD;
                 ;
                 ;//ADC interrupt
                 ;    interrupt [ADC_INT] void adc_isr(void){
                 ; 0000 0018 interrupt [17] void adc_isr(void){
                 
                 	.CSEG
                 _adc_isr:
                 ; .FSTART _adc_isr
00008f 920a      	ST   -Y,R0
000090 921a      	ST   -Y,R1
000091 936a      	ST   -Y,R22
000092 937a      	ST   -Y,R23
000093 938a      	ST   -Y,R24
000094 939a      	ST   -Y,R25
000095 93aa      	ST   -Y,R26
000096 93ba      	ST   -Y,R27
000097 93ea      	ST   -Y,R30
000098 93fa      	ST   -Y,R31
000099 b7ef      	IN   R30,SREG
00009a 93ea      	ST   -Y,R30
                 ; 0000 0019         unsigned int adc_data;
                 ; 0000 001A         adc_data=ADCW;
00009b 931a      	ST   -Y,R17
00009c 930a      	ST   -Y,R16
                 ;	adc_data -> R16,R17
                +
00009d b104     +IN R16 , 4
00009e b115     +IN R17 , 4 + 1
                 	__INWR 16,17,4
                 ; 0000 001B         temp=(adc_data*2.56)/1023;
00009f 01f8      	MOVW R30,R16
0000a0 2766      	CLR  R22
0000a1 2777      	CLR  R23
0000a2 940e 08d7 	CALL __CDF1
                +
0000a4 e0aa     +LDI R26 , LOW ( 0x4023D70A )
0000a5 edb7     +LDI R27 , HIGH ( 0x4023D70A )
0000a6 e283     +LDI R24 , BYTE3 ( 0x4023D70A )
0000a7 e490     +LDI R25 , BYTE4 ( 0x4023D70A )
                 	__GETD2N 0x4023D70A
0000a8 940e 0961 	CALL __MULF12
0000aa 01df      	MOVW R26,R30
0000ab 01cb      	MOVW R24,R22
                +
0000ac e0e0     +LDI R30 , LOW ( 0x447FC000 )
0000ad ecf0     +LDI R31 , HIGH ( 0x447FC000 )
0000ae e76f     +LDI R22 , BYTE3 ( 0x447FC000 )
0000af e474     +LDI R23 , BYTE4 ( 0x447FC000 )
                 	__GETD1N 0x447FC000
0000b0 940e 09af 	CALL __DIVF21
0000b2 940e 0720 	CALL SUBOPT_0x0
                 ; 0000 001C         temp=temp*100;
0000b4 940e 0729 	CALL SUBOPT_0x1
                +
0000b6 e0e0     +LDI R30 , LOW ( 0x42C80000 )
0000b7 e0f0     +LDI R31 , HIGH ( 0x42C80000 )
0000b8 ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
0000b9 e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
0000ba 940e 0961 	CALL __MULF12
0000bc 940e 0720 	CALL SUBOPT_0x0
                 ; 0000 001D     }
0000be 9109      	LD   R16,Y+
0000bf 9119      	LD   R17,Y+
0000c0 91e9      	LD   R30,Y+
0000c1 bfef      	OUT  SREG,R30
0000c2 91f9      	LD   R31,Y+
0000c3 91e9      	LD   R30,Y+
0000c4 91b9      	LD   R27,Y+
0000c5 91a9      	LD   R26,Y+
0000c6 9199      	LD   R25,Y+
0000c7 9189      	LD   R24,Y+
0000c8 9179      	LD   R23,Y+
0000c9 9169      	LD   R22,Y+
0000ca 9019      	LD   R1,Y+
0000cb 9009      	LD   R0,Y+
0000cc 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;
                 ;
                 ; void main(void){
                 ; 0000 0022 void main(void){
                 _main:
                 ; .FSTART _main
                 ; 0000 0023     lcd_init(16);
0000cd e1a0      	LDI  R26,LOW(16)
0000ce 940e 0287 	CALL _lcd_init
                 ; 0000 0024 
                 ; 0000 0025 
                 ; 0000 0026  //adc
                 ; 0000 0027     GICR|=0x40;
0000d0 b7eb      	IN   R30,0x3B
0000d1 64e0      	ORI  R30,0x40
0000d2 bfeb      	OUT  0x3B,R30
                 ; 0000 0028     MCUCR=0x02;
0000d3 e0e2      	LDI  R30,LOW(2)
0000d4 bfe5      	OUT  0x35,R30
                 ; 0000 0029     MCUCSR=0x00;
0000d5 e0e0      	LDI  R30,LOW(0)
0000d6 bfe4      	OUT  0x34,R30
                 ; 0000 002A     GIFR=0x40;
0000d7 e4e0      	LDI  R30,LOW(64)
0000d8 bfea      	OUT  0x3A,R30
                 ; 0000 002B     ADMUX=0xC0;  //ch=0
0000d9 ece0      	LDI  R30,LOW(192)
0000da b9e7      	OUT  0x7,R30
                 ; 0000 002C     ADCSRA=0x8D;
0000db e8ed      	LDI  R30,LOW(141)
0000dc b9e6      	OUT  0x6,R30
                 ; 0000 002D     #asm("sei")
0000dd 9478      	sei
                 ; 0000 002E     ADCSRA=0xCD;
0000de eced      	LDI  R30,LOW(205)
0000df b9e6      	OUT  0x6,R30
                 ; 0000 002F 
                 ; 0000 0030    while(1){
                 _0x7:
                 ; 0000 0031             error=SP-temp;
0000e0 940e 0729 	CALL SUBOPT_0x1
0000e2 940e 0732 	CALL SUBOPT_0x2
0000e4 940e 090a 	CALL __SUBF12
0000e6 93e0 02a8 	STS  _error,R30
0000e8 93f0 02a9 	STS  _error+1,R31
0000ea 9360 02aa 	STS  _error+2,R22
0000ec 9370 02ab 	STS  _error+3,R23
                 ; 0000 0032             pterm=kp*error;
0000ee 940e 073b 	CALL SUBOPT_0x3
0000f0 91a0 02b4 	LDS  R26,_kp
0000f2 91b0 02b5 	LDS  R27,_kp+1
0000f4 9180 02b6 	LDS  R24,_kp+2
0000f6 9190 02b7 	LDS  R25,_kp+3
0000f8 940e 0961 	CALL __MULF12
0000fa 93e0 02c0 	STS  _pterm,R30
0000fc 93f0 02c1 	STS  _pterm+1,R31
0000fe 9360 02c2 	STS  _pterm+2,R22
000100 9370 02c3 	STS  _pterm+3,R23
                 ; 0000 0033             iterm=(ki*error)+last_iterm;
000102 940e 073b 	CALL SUBOPT_0x3
000104 91a0 02b8 	LDS  R26,_ki
000106 91b0 02b9 	LDS  R27,_ki+1
000108 9180 02ba 	LDS  R24,_ki+2
00010a 9190 02bb 	LDS  R25,_ki+3
00010c 940e 0961 	CALL __MULF12
00010e 91a0 02b0 	LDS  R26,_last_iterm
000110 91b0 02b1 	LDS  R27,_last_iterm+1
000112 9180 02b2 	LDS  R24,_last_iterm+2
000114 9190 02b3 	LDS  R25,_last_iterm+3
000116 940e 0911 	CALL __ADDF12
000118 93e0 02c4 	STS  _iterm,R30
00011a 93f0 02c5 	STS  _iterm+1,R31
00011c 9360 02c6 	STS  _iterm+2,R22
00011e 9370 02c7 	STS  _iterm+3,R23
                 ; 0000 0034             dterm=(error-last_error)*kd;
000120 91a0 02ac 	LDS  R26,_last_error
000122 91b0 02ad 	LDS  R27,_last_error+1
000124 9180 02ae 	LDS  R24,_last_error+2
000126 9190 02af 	LDS  R25,_last_error+3
000128 940e 073b 	CALL SUBOPT_0x3
00012a 940e 090a 	CALL __SUBF12
00012c 91a0 02bc 	LDS  R26,_kd
00012e 91b0 02bd 	LDS  R27,_kd+1
000130 9180 02be 	LDS  R24,_kd+2
000132 9190 02bf 	LDS  R25,_kd+3
000134 940e 0961 	CALL __MULF12
000136 93e0 02c8 	STS  _dterm,R30
000138 93f0 02c9 	STS  _dterm+1,R31
00013a 9360 02ca 	STS  _dterm+2,R22
00013c 9370 02cb 	STS  _dterm+3,R23
                 ; 0000 0035             D=(pterm+iterm+dterm)*100;
00013e 940e 0744 	CALL SUBOPT_0x4
000140 91a0 02c0 	LDS  R26,_pterm
000142 91b0 02c1 	LDS  R27,_pterm+1
000144 9180 02c2 	LDS  R24,_pterm+2
000146 9190 02c3 	LDS  R25,_pterm+3
000148 940e 0911 	CALL __ADDF12
00014a 91a0 02c8 	LDS  R26,_dterm
00014c 91b0 02c9 	LDS  R27,_dterm+1
00014e 9180 02ca 	LDS  R24,_dterm+2
000150 9190 02cb 	LDS  R25,_dterm+3
000152 940e 0911 	CALL __ADDF12
                +
000154 e0a0     +LDI R26 , LOW ( 0x42C80000 )
000155 e0b0     +LDI R27 , HIGH ( 0x42C80000 )
000156 ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
000157 e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
000158 940e 0961 	CALL __MULF12
00015a 940e 074d 	CALL SUBOPT_0x5
                 ; 0000 0036             if(D<1) D=1;
00015c 940e 0756 	CALL SUBOPT_0x6
00015e 940e 075f 	CALL SUBOPT_0x7
000160 940e 09f4 	CALL __CMPF12
000162 f420      	BRSH _0xA
000163 940e 075f 	CALL SUBOPT_0x7
000165 940e 074d 	CALL SUBOPT_0x5
                 ; 0000 0037             if(D>1020) D=1020; //D=1020 MAX <0OCR Timer>
                 _0xA:
000167 940e 0756 	CALL SUBOPT_0x6
                +
000169 e0e0     +LDI R30 , LOW ( 0x447F0000 )
00016a e0f0     +LDI R31 , HIGH ( 0x447F0000 )
00016b e76f     +LDI R22 , BYTE3 ( 0x447F0000 )
00016c e474     +LDI R23 , BYTE4 ( 0x447F0000 )
                 	__GETD1N 0x447F0000
00016d 940e 09f4 	CALL __CMPF12
00016f f009      	BREQ PC+2
000170 f408      	BRCC PC+2
000171 c002      	RJMP _0xB
000172 940e 074d 	CALL SUBOPT_0x5
                 ; 0000 0038             last_iterm=iterm;
                 _0xB:
000174 940e 0744 	CALL SUBOPT_0x4
000176 93e0 02b0 	STS  _last_iterm,R30
000178 93f0 02b1 	STS  _last_iterm+1,R31
00017a 9360 02b2 	STS  _last_iterm+2,R22
00017c 9370 02b3 	STS  _last_iterm+3,R23
                 ; 0000 0039             last_error=error;
00017e 940e 073b 	CALL SUBOPT_0x3
000180 93e0 02ac 	STS  _last_error,R30
000182 93f0 02ad 	STS  _last_error+1,R31
000184 9360 02ae 	STS  _last_error+2,R22
000186 9370 02af 	STS  _last_error+3,R23
                 ; 0000 003A             D2=D;
000188 91e0 02cc 	LDS  R30,_D
00018a 91f0 02cd 	LDS  R31,_D+1
00018c 9160 02ce 	LDS  R22,_D+2
00018e 9170 02cf 	LDS  R23,_D+3
000190 940e 089e 	CALL __CFD1U
000192 012f      	MOVW R4,R30
                 ; 0000 003B             HD=D2/256;  //change to 8 Bit
000193 2de5      	MOV  R30,R5
000194 70f0      	ANDI R31,HIGH(0x0)
000195 014f      	MOVW R8,R30
                 ; 0000 003C             LD=D2%256;
000196 01f2      	MOVW R30,R4
000197 70f0      	ANDI R31,HIGH(0xFF)
000198 013f      	MOVW R6,R30
                 ; 0000 003D 
                 ; 0000 003E     DDRD.4=1;
000199 9a8c      	SBI  0x11,4
                 ; 0000 003F     DDRD.5=1;
00019a 9a8d      	SBI  0x11,5
                 ; 0000 0040     TCCR1A=0xE3;
00019b eee3      	LDI  R30,LOW(227)
00019c bdef      	OUT  0x2F,R30
                 ; 0000 0041     TCCR1B=0x0C;
00019d e0ec      	LDI  R30,LOW(12)
00019e bdee      	OUT  0x2E,R30
                 ; 0000 0042     TCNT1H=0x00;
00019f e0e0      	LDI  R30,LOW(0)
0001a0 bded      	OUT  0x2D,R30
                 ; 0000 0043     TCNT1L=0x00;
0001a1 bdec      	OUT  0x2C,R30
                 ; 0000 0044     ICR1H=0x00;
0001a2 bde7      	OUT  0x27,R30
                 ; 0000 0045     ICR1L=0x00;
0001a3 bde6      	OUT  0x26,R30
                 ; 0000 0046     OCR1AH=0x00;
0001a4 bdeb      	OUT  0x2B,R30
                 ; 0000 0047     OCR1AL=0x00;
0001a5 bdea      	OUT  0x2A,R30
                 ; 0000 0048     OCR1BH=HD;
0001a6 bc89      	OUT  0x29,R8
                 ; 0000 0049     OCR1BL=LD;
0001a7 bc68      	OUT  0x28,R6
                 ; 0000 004A 
                 ; 0000 004B     sprintf(buffer,"T=%3.1f SP=%2.1f \nKp=%f \nKi=%f \nKd=%f",temp,SP,pterm,iterm,dterm);
0001a8 e6e0      	LDI  R30,LOW(_buffer)
0001a9 e0f2      	LDI  R31,HIGH(_buffer)
0001aa 93fa      	ST   -Y,R31
0001ab 93ea      	ST   -Y,R30
                +
0001ac e6e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0001ad e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0001ae 93fa      	ST   -Y,R31
0001af 93ea      	ST   -Y,R30
0001b0 91e0 02a4 	LDS  R30,_temp
0001b2 91f0 02a5 	LDS  R31,_temp+1
0001b4 9160 02a6 	LDS  R22,_temp+2
0001b6 9170 02a7 	LDS  R23,_temp+3
0001b8 940e 0a98 	CALL __PUTPARD1
0001ba 940e 0732 	CALL SUBOPT_0x2
0001bc 940e 0a98 	CALL __PUTPARD1
0001be 91e0 02c0 	LDS  R30,_pterm
0001c0 91f0 02c1 	LDS  R31,_pterm+1
0001c2 9160 02c2 	LDS  R22,_pterm+2
0001c4 9170 02c3 	LDS  R23,_pterm+3
0001c6 940e 0a98 	CALL __PUTPARD1
0001c8 940e 0744 	CALL SUBOPT_0x4
0001ca 940e 0a98 	CALL __PUTPARD1
0001cc 91e0 02c8 	LDS  R30,_dterm
0001ce 91f0 02c9 	LDS  R31,_dterm+1
0001d0 9160 02ca 	LDS  R22,_dterm+2
0001d2 9170 02cb 	LDS  R23,_dterm+3
0001d4 940e 0a98 	CALL __PUTPARD1
0001d6 e184      	LDI  R24,20
0001d7 940e 05e0 	CALL _sprintf
0001d9 9668      	ADIW R28,24
                 ; 0000 004C     lcd_clear();
0001da 940e 0238 	CALL _lcd_clear
                 ; 0000 004D     lcd_puts(buffer);
0001dc e6a0      	LDI  R26,LOW(_buffer)
0001dd e0b2      	LDI  R27,HIGH(_buffer)
0001de 940e 0265 	CALL _lcd_puts
                 ; 0000 004E     delay_ms(200);
0001e0 eca8      	LDI  R26,LOW(200)
0001e1 e0b0      	LDI  R27,0
0001e2 940e 0861 	CALL _delay_ms
                 ; 0000 004F     ADCSRA=0xCD;
0001e4 eced      	LDI  R30,LOW(205)
0001e5 b9e6      	OUT  0x6,R30
                 ; 0000 0050    }
0001e6 cef9      	RJMP _0x7
                 ; 0000 0051  }
                 _0x10:
0001e7 cfff      	RJMP _0x10
                 ; .FEND
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_delay_G100:
                 ; .FSTART __lcd_delay_G100
0001e8 e0ff          ldi   r31,15
                 __lcd_delay0:
0001e9 95fa          dec   r31
0001ea f7f1          brne  __lcd_delay0
0001eb 9508      	RET
                 ; .FEND
                 __lcd_ready:
                 ; .FSTART __lcd_ready
0001ec b3a4          in    r26,__lcd_direction
0001ed 70af          andi  r26,0xf                 ;set as input
0001ee bba4          out   __lcd_direction,r26
0001ef 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
0001f0 98a8          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
0001f1 dff6      	RCALL __lcd_delay_G100
0001f2 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0001f3 dff4      	RCALL __lcd_delay_G100
0001f4 b3a3          in    r26,__lcd_pin
0001f5 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0001f6 dff1      	RCALL __lcd_delay_G100
0001f7 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0001f8 dfef      	RCALL __lcd_delay_G100
0001f9 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0001fa fda7          sbrc  r26,__lcd_busy_flag
0001fb cff5          rjmp  __lcd_busy
0001fc 9508      	RET
                 ; .FEND
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0001fd 7fa0          andi  r26,0xf0
0001fe 2bab          or    r26,r27
0001ff bba5          out   __lcd_port,r26          ;write
000200 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
000201 940e 01e8 	CALL __lcd_delay_G100
000203 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
000204 940e 01e8 	CALL __lcd_delay_G100
000206 9508      	RET
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000207 93aa      	ST   -Y,R26
000208 98a9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000209 b3a4          in    r26,__lcd_direction
00020a 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output
00020b bba4          out   __lcd_direction,r26
00020c b3b5          in    r27,__lcd_port
00020d 70bf          andi  r27,0xf
00020e 81a8          ld    r26,y
00020f dfed      	RCALL __lcd_write_nibble_G100
000210 81a8          ld    r26,y
000211 95a2          swap  r26
000212 dfea      	RCALL __lcd_write_nibble_G100
000213 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
000214 940c 02b8 	JMP  _0x20C0006
                 ; .FEND
                 __lcd_read_nibble_G100:
                 ; .FSTART __lcd_read_nibble_G100
000216 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
000217 940e 01e8 	CALL __lcd_delay_G100
000219 b3e3          in    r30,__lcd_pin           ;read
00021a 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
00021b 940e 01e8 	CALL __lcd_delay_G100
00021d 7fe0          andi  r30,0xf0
00021e 9508      	RET
                 ; .FEND
                 _lcd_read_byte0_G100:
                 ; .FSTART _lcd_read_byte0_G100
00021f 940e 01e8 	CALL __lcd_delay_G100
000221 dff4      	RCALL __lcd_read_nibble_G100
000222 2fae          mov   r26,r30
000223 dff2      	RCALL __lcd_read_nibble_G100
000224 98a9          cbi   __lcd_port,__lcd_rd     ;RD=0
000225 95e2          swap  r30
000226 2bea          or    r30,r26
000227 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000228 93aa      	ST   -Y,R26
000229 940e 01ec 	CALL __lcd_ready
00022b 81e8      	LD   R30,Y
00022c e0f0      	LDI  R31,0
00022d 53e0      	SUBI R30,LOW(-__base_y_G100)
00022e 4ffd      	SBCI R31,HIGH(-__base_y_G100)
00022f 81e0      	LD   R30,Z
000230 81a9      	LDD  R26,Y+1
000231 0fae      	ADD  R26,R30
000232 940e 0207 	CALL __lcd_write_data
000234 80b9      	LDD  R11,Y+1
000235 80a8      	LDD  R10,Y+0
000236 9622      	ADIW R28,2
000237 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000238 940e 01ec 	CALL __lcd_ready
00023a e0a2      	LDI  R26,LOW(2)
00023b 940e 0207 	CALL __lcd_write_data
00023d 940e 01ec 	CALL __lcd_ready
00023f e0ac      	LDI  R26,LOW(12)
000240 940e 0207 	CALL __lcd_write_data
000242 940e 01ec 	CALL __lcd_ready
000244 e0a1      	LDI  R26,LOW(1)
000245 940e 0207 	CALL __lcd_write_data
000247 e0e0      	LDI  R30,LOW(0)
000248 2eae      	MOV  R10,R30
000249 2ebe      	MOV  R11,R30
00024a 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00024b 93aa      	ST   -Y,R26
00024c 93ef          push r30
00024d 93ff          push r31
00024e 81a8          ld   r26,y
00024f 9468          set
000250 30aa          cpi  r26,10
000251 f019          breq __lcd_putchar1
000252 94e8          clt
000253 14bd      	CP   R11,R13
000254 f030      	BRLO _0x2000004
                 	__lcd_putchar1:
000255 94a3      	INC  R10
000256 e0e0      	LDI  R30,LOW(0)
000257 93ea      	ST   -Y,R30
000258 2daa      	MOV  R26,R10
000259 dfce      	RCALL _lcd_gotoxy
00025a f036      	brts __lcd_putchar0
                 _0x2000004:
00025b 94b3      	INC  R11
00025c df8f          rcall __lcd_ready
00025d 9aa8          sbi  __lcd_port,__lcd_rs ;RS=1
00025e 81a8      	LD   R26,Y
00025f 940e 0207 	CALL __lcd_write_data
                 __lcd_putchar0:
000261 91ff          pop  r31
000262 91ef          pop  r30
000263 940c 02b8 	JMP  _0x20C0006
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000265 93ba      	ST   -Y,R27
000266 93aa      	ST   -Y,R26
000267 931a      	ST   -Y,R17
                 _0x2000005:
000268 81a9      	LDD  R26,Y+1
000269 81ba      	LDD  R27,Y+1+1
00026a 91ed      	LD   R30,X+
00026b 83a9      	STD  Y+1,R26
00026c 83ba      	STD  Y+1+1,R27
00026d 2f1e      	MOV  R17,R30
00026e 30e0      	CPI  R30,0
00026f f019      	BREQ _0x2000007
000270 2fa1      	MOV  R26,R17
000271 dfd9      	RCALL _lcd_putchar
000272 cff5      	RJMP _0x2000005
                 _0x2000007:
000273 8118      	LDD  R17,Y+0
000274 9623      	ADIW R28,3
000275 9508      	RET
                 ; .FEND
                 __long_delay_G100:
                 ; .FSTART __long_delay_G100
000276 27aa          clr   r26
000277 27bb          clr   r27
                 __long_delay0:
000278 9711          sbiw  r26,1         ;2 cycles
000279 f7f1          brne  __long_delay0 ;2 cycles
00027a 9508      	RET
                 ; .FEND
                 __lcd_init_write_G100:
                 ; .FSTART __lcd_init_write_G100
00027b 93aa      	ST   -Y,R26
00027c 98a9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
00027d b3a4          in    r26,__lcd_direction
00027e 6fa7          ori   r26,0xf7                ;set as output
00027f bba4          out   __lcd_direction,r26
000280 b3b5          in    r27,__lcd_port
000281 70bf          andi  r27,0xf
000282 81a8          ld    r26,y
000283 940e 01fd 	CALL __lcd_write_nibble_G100
000285 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
000286 c031      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000287 93aa      	ST   -Y,R26
000288 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
000289 98a8          cbi   __lcd_port,__lcd_rs     ;RS=0
00028a 80d8      	LDD  R13,Y+0
00028b 81e8      	LD   R30,Y
00028c 58e0      	SUBI R30,-LOW(128)
                +
00028d 93e0 02d2+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00028f 81e8      	LD   R30,Y
000290 54e0      	SUBI R30,-LOW(192)
                +
000291 93e0 02d3+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000293 940e 0764 	CALL SUBOPT_0x8
000295 940e 0764 	CALL SUBOPT_0x8
000297 940e 0764 	CALL SUBOPT_0x8
000299 dfdc      	RCALL __long_delay_G100
00029a e2a0      	LDI  R26,LOW(32)
00029b dfdf      	RCALL __lcd_init_write_G100
00029c dfd9      	RCALL __long_delay_G100
00029d e2a8      	LDI  R26,LOW(40)
00029e 940e 0769 	CALL SUBOPT_0x9
0002a0 e0a4      	LDI  R26,LOW(4)
0002a1 940e 0769 	CALL SUBOPT_0x9
0002a3 e8a5      	LDI  R26,LOW(133)
0002a4 940e 0769 	CALL SUBOPT_0x9
0002a6 b3a4          in    r26,__lcd_direction
0002a7 70af          andi  r26,0xf                 ;set as input
0002a8 bba4          out   __lcd_direction,r26
0002a9 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
0002aa 940e 021f 	CALL _lcd_read_byte0_G100
0002ac 30e5      	CPI  R30,LOW(0x5)
0002ad f011      	BREQ _0x200000B
0002ae e0e0      	LDI  R30,LOW(0)
0002af c008      	RJMP _0x20C0006
                 _0x200000B:
0002b0 940e 01ec 	CALL __lcd_ready
0002b2 e0a6      	LDI  R26,LOW(6)
0002b3 940e 0207 	CALL __lcd_write_data
0002b5 940e 0238 	CALL _lcd_clear
0002b7 e0e1      	LDI  R30,LOW(1)
                 _0x20C0006:
0002b8 9621      	ADIW R28,1
0002b9 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
0002ba 93ba      	ST   -Y,R27
0002bb 93aa      	ST   -Y,R26
0002bc 931a      	ST   -Y,R17
0002bd 930a      	ST   -Y,R16
0002be 81aa      	LDD  R26,Y+2
0002bf 81bb      	LDD  R27,Y+2+1
0002c0 9612      	ADIW R26,2
0002c1 940e 0a7f 	CALL __GETW1P
0002c3 9730      	SBIW R30,0
0002c4 f129      	BREQ _0x2020010
0002c5 81aa      	LDD  R26,Y+2
0002c6 81bb      	LDD  R27,Y+2+1
0002c7 9614      	ADIW R26,4
0002c8 940e 0a7f 	CALL __GETW1P
0002ca 018f      	MOVW R16,R30
0002cb 9730      	SBIW R30,0
0002cc f061      	BREQ _0x2020012
                +
0002cd 3002     +CPI R16 , LOW ( 2 )
0002ce e0e0     +LDI R30 , HIGH ( 2 )
0002cf 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0002d0 f080      	BRLO _0x2020013
0002d1 01f8      	MOVW R30,R16
0002d2 9731      	SBIW R30,1
0002d3 018f      	MOVW R16,R30
                +
0002d4 81aa     +LDD R26 , Y + 2
0002d5 81bb     +LDD R27 , Y + 2 + 1
0002d6 9614     +ADIW R26 , 4
0002d7 93ed     +ST X + , R30
0002d8 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
0002d9 81aa      	LDD  R26,Y+2
0002da 81bb      	LDD  R27,Y+2+1
0002db 9612      	ADIW R26,2
0002dc 940e 076d 	CALL SUBOPT_0xA
0002de 9731      	SBIW R30,1
0002df 81ac      	LDD  R26,Y+4
0002e0 83a0      	STD  Z+0,R26
                 _0x2020013:
0002e1 81aa      	LDD  R26,Y+2
0002e2 81bb      	LDD  R27,Y+2+1
0002e3 940e 0a7f 	CALL __GETW1P
0002e5 23ff      	TST  R31
0002e6 f012      	BRMI _0x2020014
0002e7 940e 076d 	CALL SUBOPT_0xA
                 _0x2020014:
0002e9 c006      	RJMP _0x2020015
                 _0x2020010:
0002ea 81aa      	LDD  R26,Y+2
0002eb 81bb      	LDD  R27,Y+2+1
0002ec efef      	LDI  R30,LOW(65535)
0002ed efff      	LDI  R31,HIGH(65535)
0002ee 93ed      	ST   X+,R30
0002ef 93fc      	ST   X,R31
                 _0x2020015:
0002f0 8119      	LDD  R17,Y+1
0002f1 8108      	LDD  R16,Y+0
0002f2 9625      	ADIW R28,5
0002f3 9508      	RET
                 ; .FEND
                 __ftoe_G101:
                 ; .FSTART __ftoe_G101
0002f4 940e 0773 	CALL SUBOPT_0xB
0002f6 e8e0      	LDI  R30,LOW(128)
0002f7 83ea      	STD  Y+2,R30
0002f8 e3ef      	LDI  R30,LOW(63)
0002f9 83eb      	STD  Y+3,R30
0002fa 940e 0ab5 	CALL __SAVELOCR4
0002fc 85ee      	LDD  R30,Y+14
0002fd 85ff      	LDD  R31,Y+14+1
0002fe 3fef      	CPI  R30,LOW(0xFFFF)
0002ff efaf      	LDI  R26,HIGH(0xFFFF)
000300 07fa      	CPC  R31,R26
000301 f449      	BRNE _0x2020019
000302 85e8      	LDD  R30,Y+8
000303 85f9      	LDD  R31,Y+8+1
000304 93fa      	ST   -Y,R31
000305 93ea      	ST   -Y,R30
                +
000306 e8ac     +LDI R26 , LOW ( 2 * _0x2020000 + ( 0 ) )
000307 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW2FN _0x2020000,0
000308 940e 0614 	CALL _strcpyf
00030a c0b7      	RJMP _0x20C0005
                 _0x2020019:
00030b 3fef      	CPI  R30,LOW(0x7FFF)
00030c e7af      	LDI  R26,HIGH(0x7FFF)
00030d 07fa      	CPC  R31,R26
00030e f449      	BRNE _0x2020018
00030f 85e8      	LDD  R30,Y+8
000310 85f9      	LDD  R31,Y+8+1
000311 93fa      	ST   -Y,R31
000312 93ea      	ST   -Y,R30
                +
000313 e8ad     +LDI R26 , LOW ( 2 * _0x2020000 + ( 1 ) )
000314 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW2FN _0x2020000,1
000315 940e 0614 	CALL _strcpyf
000317 c0aa      	RJMP _0x20C0005
                 _0x2020018:
000318 85ab      	LDD  R26,Y+11
000319 30a7      	CPI  R26,LOW(0x7)
00031a f010      	BRLO _0x202001B
00031b e0e6      	LDI  R30,LOW(6)
00031c 87eb      	STD  Y+11,R30
                 _0x202001B:
00031d 851b      	LDD  R17,Y+11
                 _0x202001C:
00031e 2fe1      	MOV  R30,R17
00031f 5011      	SUBI R17,1
000320 30e0      	CPI  R30,0
000321 f019      	BREQ _0x202001E
000322 940e 077a 	CALL SUBOPT_0xC
000324 cff9      	RJMP _0x202001C
                 _0x202001E:
                +
000325 85ec     +LDD R30 , Y + 12
000326 85fd     +LDD R31 , Y + 12 + 1
000327 856e     +LDD R22 , Y + 12 + 2
000328 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000329 940e 0aaf 	CALL __CPD10
00032b f421      	BRNE _0x202001F
00032c e030      	LDI  R19,LOW(0)
00032d 940e 077a 	CALL SUBOPT_0xC
00032f c02d      	RJMP _0x2020020
                 _0x202001F:
000330 853b      	LDD  R19,Y+11
000331 940e 0789 	CALL SUBOPT_0xD
000333 f009      	BREQ PC+2
000334 f408      	BRCC PC+2
000335 c00b      	RJMP _0x2020021
000336 940e 077a 	CALL SUBOPT_0xC
                 _0x2020022:
000338 940e 0789 	CALL SUBOPT_0xD
00033a f028      	BRLO _0x2020024
00033b 940e 0794 	CALL SUBOPT_0xE
00033d 940e 0799 	CALL SUBOPT_0xF
00033f cff8      	RJMP _0x2020022
                 _0x2020024:
000340 c00d      	RJMP _0x2020025
                 _0x2020021:
                 _0x2020026:
000341 940e 0789 	CALL SUBOPT_0xD
000343 f440      	BRSH _0x2020028
000344 940e 0794 	CALL SUBOPT_0xE
000346 940e 07a5 	CALL SUBOPT_0x10
000348 940e 07ac 	CALL SUBOPT_0x11
00034a 5031      	SUBI R19,LOW(1)
00034b cff5      	RJMP _0x2020026
                 _0x2020028:
00034c 940e 077a 	CALL SUBOPT_0xC
                 _0x2020025:
                +
00034e 85ec     +LDD R30 , Y + 12
00034f 85fd     +LDD R31 , Y + 12 + 1
000350 856e     +LDD R22 , Y + 12 + 2
000351 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000352 940e 07b1 	CALL SUBOPT_0x12
000354 940e 07ac 	CALL SUBOPT_0x11
000356 940e 0789 	CALL SUBOPT_0xD
000358 f020      	BRLO _0x2020029
000359 940e 0794 	CALL SUBOPT_0xE
00035b 940e 0799 	CALL SUBOPT_0xF
                 _0x2020029:
                 _0x2020020:
00035d e010      	LDI  R17,LOW(0)
                 _0x202002A:
00035e 85eb      	LDD  R30,Y+11
00035f 17e1      	CP   R30,R17
000360 f1a8      	BRLO _0x202002C
                +
000361 81ac     +LDD R26 , Y + 4
000362 81bd     +LDD R27 , Y + 4 + 1
000363 818e     +LDD R24 , Y + 4 + 2
000364 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000365 940e 07b8 	CALL SUBOPT_0x13
000367 940e 07b1 	CALL SUBOPT_0x12
000369 01df      	MOVW R26,R30
00036a 01cb      	MOVW R24,R22
00036b 940e 066b 	CALL _floor
                +
00036d 83ec     +STD Y + 4 , R30
00036e 83fd     +STD Y + 4 + 1 , R31
00036f 836e     +STD Y + 4 + 2 , R22
000370 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000371 940e 0794 	CALL SUBOPT_0xE
000373 940e 09af 	CALL __DIVF21
000375 940e 089e 	CALL __CFD1U
000377 2f0e      	MOV  R16,R30
000378 940e 07bf 	CALL SUBOPT_0x14
00037a 940e 07c6 	CALL SUBOPT_0x15
00037c 27ff      	CLR  R31
00037d 2766      	CLR  R22
00037e 2777      	CLR  R23
00037f 940e 08d7 	CALL __CDF1
                +
000381 81ac     +LDD R26 , Y + 4
000382 81bd     +LDD R27 , Y + 4 + 1
000383 818e     +LDD R24 , Y + 4 + 2
000384 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000385 940e 0961 	CALL __MULF12
000387 940e 0794 	CALL SUBOPT_0xE
000389 940e 07cb 	CALL SUBOPT_0x16
00038b 940e 07ac 	CALL SUBOPT_0x11
00038d 2fe1      	MOV  R30,R17
00038e 5f1f      	SUBI R17,-1
00038f 30e0      	CPI  R30,0
000390 f669      	BRNE _0x202002A
000391 940e 07bf 	CALL SUBOPT_0x14
000393 e2ee      	LDI  R30,LOW(46)
000394 93ec      	ST   X,R30
000395 cfc8      	RJMP _0x202002A
                 _0x202002C:
000396 940e 07d0 	CALL SUBOPT_0x17
000398 9731      	SBIW R30,1
000399 85aa      	LDD  R26,Y+10
00039a 83a0      	STD  Z+0,R26
00039b 3030      	CPI  R19,0
00039c f42c      	BRGE _0x202002E
00039d 9531      	NEG  R19
00039e 85a8      	LDD  R26,Y+8
00039f 85b9      	LDD  R27,Y+8+1
0003a0 e2ed      	LDI  R30,LOW(45)
0003a1 c003      	RJMP _0x2020116
                 _0x202002E:
0003a2 85a8      	LDD  R26,Y+8
0003a3 85b9      	LDD  R27,Y+8+1
0003a4 e2eb      	LDI  R30,LOW(43)
                 _0x2020116:
0003a5 93ec      	ST   X,R30
0003a6 940e 07d0 	CALL SUBOPT_0x17
0003a8 940e 07d0 	CALL SUBOPT_0x17
0003aa 9731      	SBIW R30,1
0003ab 01bf      	MOVW R22,R30
0003ac 2fa3      	MOV  R26,R19
0003ad e0ea      	LDI  R30,LOW(10)
0003ae 940e 0a39 	CALL __DIVB21
0003b0 5de0      	SUBI R30,-LOW(48)
0003b1 01db      	MOVW R26,R22
0003b2 93ec      	ST   X,R30
0003b3 940e 07d0 	CALL SUBOPT_0x17
0003b5 9731      	SBIW R30,1
0003b6 01bf      	MOVW R22,R30
0003b7 2fa3      	MOV  R26,R19
0003b8 e0ea      	LDI  R30,LOW(10)
0003b9 940e 0a63 	CALL __MODB21
0003bb 5de0      	SUBI R30,-LOW(48)
0003bc 01db      	MOVW R26,R22
0003bd 93ec      	ST   X,R30
0003be 85a8      	LDD  R26,Y+8
0003bf 85b9      	LDD  R27,Y+8+1
0003c0 e0e0      	LDI  R30,LOW(0)
0003c1 93ec      	ST   X,R30
                 _0x20C0005:
0003c2 940e 0abc 	CALL __LOADLOCR4
0003c4 9660      	ADIW R28,16
0003c5 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0003c6 93ba      	ST   -Y,R27
0003c7 93aa      	ST   -Y,R26
0003c8 97ef      	SBIW R28,63
0003c9 9761      	SBIW R28,17
0003ca 940e 0ab3 	CALL __SAVELOCR6
0003cc e010      	LDI  R17,0
                +
0003cd 01fe     +MOVW R30 , R28
0003ce 5ae8     +SUBI R30 , LOW ( - 88 )
0003cf 4fff     +SBCI R31 , HIGH ( - 88 )
0003d0 9001     +LD R0 , Z +
0003d1 81f0     +LD R31 , Z
0003d2 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0003d3 87e8      	STD  Y+8,R30
0003d4 87f9      	STD  Y+8+1,R31
                +
0003d5 01fe     +MOVW R30 , R28
0003d6 5aea     +SUBI R30 , LOW ( - 86 )
0003d7 4fff     +SBCI R31 , HIGH ( - 86 )
0003d8 9001     +LD R0 , Z +
0003d9 81f0     +LD R31 , Z
0003da 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0003db 83ee      	STD  Y+6,R30
0003dc 83ff      	STD  Y+6+1,R31
0003dd 81ae      	LDD  R26,Y+6
0003de 81bf      	LDD  R27,Y+6+1
0003df e0e0      	LDI  R30,LOW(0)
0003e0 e0f0      	LDI  R31,HIGH(0)
0003e1 93ed      	ST   X+,R30
0003e2 93fc      	ST   X,R31
                 _0x2020030:
0003e3 01de      	MOVW R26,R28
0003e4 5aa4      	SUBI R26,LOW(-(92))
0003e5 4fbf      	SBCI R27,HIGH(-(92))
0003e6 940e 076d 	CALL SUBOPT_0xA
0003e8 9731      	SBIW R30,1
0003e9 91e4      	LPM  R30,Z
0003ea 2f2e      	MOV  R18,R30
0003eb 30e0      	CPI  R30,0
0003ec f409      	BRNE PC+2
0003ed c1e9      	RJMP _0x2020032
0003ee 2fe1      	MOV  R30,R17
0003ef 30e0      	CPI  R30,0
0003f0 f439      	BRNE _0x2020036
0003f1 3225      	CPI  R18,37
0003f2 f411      	BRNE _0x2020037
0003f3 e011      	LDI  R17,LOW(1)
0003f4 c002      	RJMP _0x2020038
                 _0x2020037:
0003f5 940e 07d6 	CALL SUBOPT_0x18
                 _0x2020038:
0003f7 c1de      	RJMP _0x2020035
                 _0x2020036:
0003f8 30e1      	CPI  R30,LOW(0x1)
0003f9 f4c1      	BRNE _0x2020039
0003fa 3225      	CPI  R18,37
0003fb f419      	BRNE _0x202003A
0003fc 940e 07d6 	CALL SUBOPT_0x18
0003fe c1d6      	RJMP _0x2020117
                 _0x202003A:
0003ff e012      	LDI  R17,LOW(2)
000400 e0e0      	LDI  R30,LOW(0)
000401 8bed      	STD  Y+21,R30
000402 e000      	LDI  R16,LOW(0)
000403 322d      	CPI  R18,45
000404 f411      	BRNE _0x202003B
000405 e001      	LDI  R16,LOW(1)
000406 c1cf      	RJMP _0x2020035
                 _0x202003B:
000407 322b      	CPI  R18,43
000408 f419      	BRNE _0x202003C
000409 e2eb      	LDI  R30,LOW(43)
00040a 8bed      	STD  Y+21,R30
00040b c1ca      	RJMP _0x2020035
                 _0x202003C:
00040c 3220      	CPI  R18,32
00040d f419      	BRNE _0x202003D
00040e e2e0      	LDI  R30,LOW(32)
00040f 8bed      	STD  Y+21,R30
000410 c1c5      	RJMP _0x2020035
                 _0x202003D:
000411 c002      	RJMP _0x202003E
                 _0x2020039:
000412 30e2      	CPI  R30,LOW(0x2)
000413 f439      	BRNE _0x202003F
                 _0x202003E:
000414 e050      	LDI  R21,LOW(0)
000415 e013      	LDI  R17,LOW(3)
000416 3320      	CPI  R18,48
000417 f411      	BRNE _0x2020040
000418 6800      	ORI  R16,LOW(128)
000419 c1bc      	RJMP _0x2020035
                 _0x2020040:
00041a c002      	RJMP _0x2020041
                 _0x202003F:
00041b 30e3      	CPI  R30,LOW(0x3)
00041c f491      	BRNE _0x2020042
                 _0x2020041:
00041d 3320      	CPI  R18,48
00041e f010      	BRLO _0x2020044
00041f 332a      	CPI  R18,58
000420 f008      	BRLO _0x2020045
                 _0x2020044:
000421 c007      	RJMP _0x2020043
                 _0x2020045:
000422 e0aa      	LDI  R26,LOW(10)
000423 9f5a      	MUL  R21,R26
000424 2d50      	MOV  R21,R0
000425 2fe2      	MOV  R30,R18
000426 53e0      	SUBI R30,LOW(48)
000427 0f5e      	ADD  R21,R30
000428 c1ad      	RJMP _0x2020035
                 _0x2020043:
000429 e040      	LDI  R20,LOW(0)
00042a 322e      	CPI  R18,46
00042b f411      	BRNE _0x2020046
00042c e014      	LDI  R17,LOW(4)
00042d c1a8      	RJMP _0x2020035
                 _0x2020046:
00042e c00f      	RJMP _0x2020047
                 _0x2020042:
00042f 30e4      	CPI  R30,LOW(0x4)
000430 f499      	BRNE _0x2020049
000431 3320      	CPI  R18,48
000432 f010      	BRLO _0x202004B
000433 332a      	CPI  R18,58
000434 f008      	BRLO _0x202004C
                 _0x202004B:
000435 c008      	RJMP _0x202004A
                 _0x202004C:
000436 6200      	ORI  R16,LOW(32)
000437 e0aa      	LDI  R26,LOW(10)
000438 9f4a      	MUL  R20,R26
000439 2d40      	MOV  R20,R0
00043a 2fe2      	MOV  R30,R18
00043b 53e0      	SUBI R30,LOW(48)
00043c 0f4e      	ADD  R20,R30
00043d c198      	RJMP _0x2020035
                 _0x202004A:
                 _0x2020047:
00043e 362c      	CPI  R18,108
00043f f419      	BRNE _0x202004D
000440 6002      	ORI  R16,LOW(2)
000441 e015      	LDI  R17,LOW(5)
000442 c193      	RJMP _0x2020035
                 _0x202004D:
000443 c003      	RJMP _0x202004E
                 _0x2020049:
000444 30e5      	CPI  R30,LOW(0x5)
000445 f009      	BREQ PC+2
000446 c18f      	RJMP _0x2020035
                 _0x202004E:
000447 2fe2      	MOV  R30,R18
000448 36e3      	CPI  R30,LOW(0x63)
000449 f459      	BRNE _0x2020053
00044a 940e 07dd 	CALL SUBOPT_0x19
00044c 940e 07e4 	CALL SUBOPT_0x1A
00044e 940e 07dd 	CALL SUBOPT_0x19
000450 81a4      	LDD  R26,Z+4
000451 93aa      	ST   -Y,R26
000452 940e 07eb 	CALL SUBOPT_0x1B
000454 c180      	RJMP _0x2020054
                 _0x2020053:
000455 34e5      	CPI  R30,LOW(0x45)
000456 f011      	BREQ _0x2020057
000457 36e5      	CPI  R30,LOW(0x65)
000458 f409      	BRNE _0x2020058
                 _0x2020057:
000459 c003      	RJMP _0x2020059
                 _0x2020058:
00045a 36e6      	CPI  R30,LOW(0x66)
00045b f009      	BREQ PC+2
00045c c048      	RJMP _0x202005A
                 _0x2020059:
00045d 01fe      	MOVW R30,R28
00045e 9676      	ADIW R30,22
00045f 87ee      	STD  Y+14,R30
000460 87ff      	STD  Y+14+1,R31
000461 940e 07f1 	CALL SUBOPT_0x1C
000463 940e 0a83 	CALL __GETD1P
000465 940e 07f8 	CALL SUBOPT_0x1D
000467 940e 07fd 	CALL SUBOPT_0x1E
000469 85ad      	LDD  R26,Y+13
00046a 23aa      	TST  R26
00046b f032      	BRMI _0x202005B
00046c 89ad      	LDD  R26,Y+21
00046d 32ab      	CPI  R26,LOW(0x2B)
00046e f059      	BREQ _0x202005D
00046f 32a0      	CPI  R26,LOW(0x20)
000470 f081      	BREQ _0x202005F
000471 c017      	RJMP _0x2020060
                 _0x202005B:
000472 940e 07ff 	CALL SUBOPT_0x1F
000474 940e 086b 	CALL __ANEGF1
000476 940e 07f8 	CALL SUBOPT_0x1D
000478 e2ed      	LDI  R30,LOW(45)
000479 8bed      	STD  Y+21,R30
                 _0x202005D:
00047a ff07      	SBRS R16,7
00047b c005      	RJMP _0x2020061
00047c 89ed      	LDD  R30,Y+21
00047d 93ea      	ST   -Y,R30
00047e 940e 07eb 	CALL SUBOPT_0x1B
000480 c008      	RJMP _0x2020062
                 _0x2020061:
                 _0x202005F:
000481 85ee      	LDD  R30,Y+14
000482 85ff      	LDD  R31,Y+14+1
000483 9631      	ADIW R30,1
000484 87ee      	STD  Y+14,R30
000485 87ff      	STD  Y+14+1,R31
000486 9731      	SBIW R30,1
000487 89ad      	LDD  R26,Y+21
000488 83a0      	STD  Z+0,R26
                 _0x2020062:
                 _0x2020060:
000489 ff05      	SBRS R16,5
00048a e046      	LDI  R20,LOW(6)
00048b 3626      	CPI  R18,102
00048c f451      	BRNE _0x2020064
00048d 940e 07ff 	CALL SUBOPT_0x1F
00048f 940e 0a98 	CALL __PUTPARD1
000491 934a      	ST   -Y,R20
000492 89ab      	LDD  R26,Y+19
000493 89bc      	LDD  R27,Y+19+1
000494 940e 0682 	CALL _ftoa
000496 c009      	RJMP _0x2020065
                 _0x2020064:
000497 940e 07ff 	CALL SUBOPT_0x1F
000499 940e 0a98 	CALL __PUTPARD1
00049b 934a      	ST   -Y,R20
00049c 932a      	ST   -Y,R18
00049d 89ac      	LDD  R26,Y+20
00049e 89bd      	LDD  R27,Y+20+1
00049f de54      	RCALL __ftoe_G101
                 _0x2020065:
0004a0 01fe      	MOVW R30,R28
0004a1 9676      	ADIW R30,22
0004a2 940e 0804 	CALL SUBOPT_0x20
0004a4 c01e      	RJMP _0x2020066
                 _0x202005A:
0004a5 37e3      	CPI  R30,LOW(0x73)
0004a6 f439      	BRNE _0x2020068
0004a7 940e 07fd 	CALL SUBOPT_0x1E
0004a9 940e 080c 	CALL SUBOPT_0x21
0004ab 940e 0804 	CALL SUBOPT_0x20
0004ad c00e      	RJMP _0x2020069
                 _0x2020068:
0004ae 37e0      	CPI  R30,LOW(0x70)
0004af f4c1      	BRNE _0x202006B
0004b0 940e 07fd 	CALL SUBOPT_0x1E
0004b2 940e 080c 	CALL SUBOPT_0x21
0004b4 87ee      	STD  Y+14,R30
0004b5 87ff      	STD  Y+14+1,R31
0004b6 85ae      	LDD  R26,Y+14
0004b7 85bf      	LDD  R27,Y+14+1
0004b8 940e 062d 	CALL _strlenf
0004ba 2f1e      	MOV  R17,R30
0004bb 6008      	ORI  R16,LOW(8)
                 _0x2020069:
0004bc 770f      	ANDI R16,LOW(127)
0004bd 3040      	CPI  R20,0
0004be f011      	BREQ _0x202006D
0004bf 1741      	CP   R20,R17
0004c0 f008      	BRLO _0x202006E
                 _0x202006D:
0004c1 c001      	RJMP _0x202006C
                 _0x202006E:
0004c2 2f14      	MOV  R17,R20
                 _0x202006C:
                 _0x2020066:
0004c3 e040      	LDI  R20,LOW(0)
0004c4 e0e0      	LDI  R30,LOW(0)
0004c5 8bec      	STD  Y+20,R30
0004c6 e030      	LDI  R19,LOW(0)
0004c7 c06d      	RJMP _0x202006F
                 _0x202006B:
0004c8 36e4      	CPI  R30,LOW(0x64)
0004c9 f011      	BREQ _0x2020072
0004ca 36e9      	CPI  R30,LOW(0x69)
0004cb f411      	BRNE _0x2020073
                 _0x2020072:
0004cc 6004      	ORI  R16,LOW(4)
0004cd c002      	RJMP _0x2020074
                 _0x2020073:
0004ce 37e5      	CPI  R30,LOW(0x75)
0004cf f4a1      	BRNE _0x2020075
                 _0x2020074:
0004d0 e0ea      	LDI  R30,LOW(10)
0004d1 8bec      	STD  Y+20,R30
0004d2 ff01      	SBRS R16,1
0004d3 c008      	RJMP _0x2020076
                +
0004d4 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0004d5 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0004d6 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0004d7 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
0004d8 940e 0811 	CALL SUBOPT_0x22
0004da e01a      	LDI  R17,LOW(10)
0004db c022      	RJMP _0x2020077
                 _0x2020076:
                +
0004dc e1e0     +LDI R30 , LOW ( 0x2710 )
0004dd e2f7     +LDI R31 , HIGH ( 0x2710 )
0004de e060     +LDI R22 , BYTE3 ( 0x2710 )
0004df e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0004e0 940e 0811 	CALL SUBOPT_0x22
0004e2 e015      	LDI  R17,LOW(5)
0004e3 c01a      	RJMP _0x2020077
                 _0x2020075:
0004e4 35e8      	CPI  R30,LOW(0x58)
0004e5 f411      	BRNE _0x2020079
0004e6 6008      	ORI  R16,LOW(8)
0004e7 c003      	RJMP _0x202007A
                 _0x2020079:
0004e8 37e8      	CPI  R30,LOW(0x78)
0004e9 f009      	BREQ PC+2
0004ea c0ea      	RJMP _0x20200B8
                 _0x202007A:
0004eb e1e0      	LDI  R30,LOW(16)
0004ec 8bec      	STD  Y+20,R30
0004ed ff01      	SBRS R16,1
0004ee c008      	RJMP _0x202007C
                +
0004ef e0e0     +LDI R30 , LOW ( 0x10000000 )
0004f0 e0f0     +LDI R31 , HIGH ( 0x10000000 )
0004f1 e060     +LDI R22 , BYTE3 ( 0x10000000 )
0004f2 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
0004f3 940e 0811 	CALL SUBOPT_0x22
0004f5 e018      	LDI  R17,LOW(8)
0004f6 c007      	RJMP _0x2020077
                 _0x202007C:
                +
0004f7 e0e0     +LDI R30 , LOW ( 0x1000 )
0004f8 e1f0     +LDI R31 , HIGH ( 0x1000 )
0004f9 e060     +LDI R22 , BYTE3 ( 0x1000 )
0004fa e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
0004fb 940e 0811 	CALL SUBOPT_0x22
0004fd e014      	LDI  R17,LOW(4)
                 _0x2020077:
0004fe 3040      	CPI  R20,0
0004ff f011      	BREQ _0x202007D
000500 770f      	ANDI R16,LOW(127)
000501 c001      	RJMP _0x202007E
                 _0x202007D:
000502 e041      	LDI  R20,LOW(1)
                 _0x202007E:
000503 ff01      	SBRS R16,1
000504 c008      	RJMP _0x202007F
000505 940e 07fd 	CALL SUBOPT_0x1E
000507 940e 07f1 	CALL SUBOPT_0x1C
000509 9614      	ADIW R26,4
00050a 940e 0a83 	CALL __GETD1P
00050c c00f      	RJMP _0x2020118
                 _0x202007F:
00050d ff02      	SBRS R16,2
00050e c007      	RJMP _0x2020081
00050f 940e 07fd 	CALL SUBOPT_0x1E
000511 940e 080c 	CALL SUBOPT_0x21
000513 940e 0a26 	CALL __CWD1
000515 c006      	RJMP _0x2020118
                 _0x2020081:
000516 940e 07fd 	CALL SUBOPT_0x1E
000518 940e 080c 	CALL SUBOPT_0x21
00051a 2766      	CLR  R22
00051b 2777      	CLR  R23
                 _0x2020118:
                +
00051c 87ea     +STD Y + 10 , R30
00051d 87fb     +STD Y + 10 + 1 , R31
00051e 876c     +STD Y + 10 + 2 , R22
00051f 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000520 ff02      	SBRS R16,2
000521 c012      	RJMP _0x2020083
000522 85ad      	LDD  R26,Y+13
000523 23aa      	TST  R26
000524 f442      	BRPL _0x2020084
000525 940e 07ff 	CALL SUBOPT_0x1F
000527 940e 0a18 	CALL __ANEGD1
000529 940e 07f8 	CALL SUBOPT_0x1D
00052b e2ed      	LDI  R30,LOW(45)
00052c 8bed      	STD  Y+21,R30
                 _0x2020084:
00052d 89ed      	LDD  R30,Y+21
00052e 30e0      	CPI  R30,0
00052f f019      	BREQ _0x2020085
000530 5f1f      	SUBI R17,-LOW(1)
000531 5f4f      	SUBI R20,-LOW(1)
000532 c001      	RJMP _0x2020086
                 _0x2020085:
000533 7f0b      	ANDI R16,LOW(251)
                 _0x2020086:
                 _0x2020083:
000534 2f34      	MOV  R19,R20
                 _0x202006F:
000535 fd00      	SBRC R16,0
000536 c014      	RJMP _0x2020087
                 _0x2020088:
000537 1715      	CP   R17,R21
000538 f410      	BRSH _0x202008B
000539 1735      	CP   R19,R21
00053a f008      	BRLO _0x202008C
                 _0x202008B:
00053b c00f      	RJMP _0x202008A
                 _0x202008C:
00053c ff07      	SBRS R16,7
00053d c008      	RJMP _0x202008D
00053e ff02      	SBRS R16,2
00053f c004      	RJMP _0x202008E
000540 7f0b      	ANDI R16,LOW(251)
000541 892d      	LDD  R18,Y+21
000542 5011      	SUBI R17,LOW(1)
000543 c001      	RJMP _0x202008F
                 _0x202008E:
000544 e320      	LDI  R18,LOW(48)
                 _0x202008F:
000545 c001      	RJMP _0x2020090
                 _0x202008D:
000546 e220      	LDI  R18,LOW(32)
                 _0x2020090:
000547 940e 07d6 	CALL SUBOPT_0x18
000549 5051      	SUBI R21,LOW(1)
00054a cfec      	RJMP _0x2020088
                 _0x202008A:
                 _0x2020087:
                 _0x2020091:
00054b 1714      	CP   R17,R20
00054c f490      	BRSH _0x2020093
00054d 6100      	ORI  R16,LOW(16)
00054e ff02      	SBRS R16,2
00054f c006      	RJMP _0x2020094
000550 940e 0816 	CALL SUBOPT_0x23
000552 f009      	BREQ _0x2020095
000553 5051      	SUBI R21,LOW(1)
                 _0x2020095:
000554 5011      	SUBI R17,LOW(1)
000555 5041      	SUBI R20,LOW(1)
                 _0x2020094:
000556 e3e0      	LDI  R30,LOW(48)
000557 93ea      	ST   -Y,R30
000558 940e 07eb 	CALL SUBOPT_0x1B
00055a 3050      	CPI  R21,0
00055b f009      	BREQ _0x2020096
00055c 5051      	SUBI R21,LOW(1)
                 _0x2020096:
00055d 5041      	SUBI R20,LOW(1)
00055e cfec      	RJMP _0x2020091
                 _0x2020093:
00055f 2f31      	MOV  R19,R17
000560 89ec      	LDD  R30,Y+20
000561 30e0      	CPI  R30,0
000562 f4b9      	BRNE _0x2020097
                 _0x2020098:
000563 3030      	CPI  R19,0
000564 f0a1      	BREQ _0x202009A
000565 ff03      	SBRS R16,3
000566 c006      	RJMP _0x202009B
000567 85ee      	LDD  R30,Y+14
000568 85ff      	LDD  R31,Y+14+1
000569 9125      	LPM  R18,Z+
00056a 87ee      	STD  Y+14,R30
00056b 87ff      	STD  Y+14+1,R31
00056c c005      	RJMP _0x202009C
                 _0x202009B:
00056d 85ae      	LDD  R26,Y+14
00056e 85bf      	LDD  R27,Y+14+1
00056f 912d      	LD   R18,X+
000570 87ae      	STD  Y+14,R26
000571 87bf      	STD  Y+14+1,R27
                 _0x202009C:
000572 940e 07d6 	CALL SUBOPT_0x18
000574 3050      	CPI  R21,0
000575 f009      	BREQ _0x202009D
000576 5051      	SUBI R21,LOW(1)
                 _0x202009D:
000577 5031      	SUBI R19,LOW(1)
000578 cfea      	RJMP _0x2020098
                 _0x202009A:
000579 c051      	RJMP _0x202009E
                 _0x2020097:
                 _0x20200A0:
00057a 940e 0828 	CALL SUBOPT_0x24
00057c 940e 0a3e 	CALL __DIVD21U
00057e 2f2e      	MOV  R18,R30
00057f 302a      	CPI  R18,10
000580 f030      	BRLO _0x20200A2
000581 ff03      	SBRS R16,3
000582 c002      	RJMP _0x20200A3
000583 5c29      	SUBI R18,-LOW(55)
000584 c001      	RJMP _0x20200A4
                 _0x20200A3:
000585 5a29      	SUBI R18,-LOW(87)
                 _0x20200A4:
000586 c001      	RJMP _0x20200A5
                 _0x20200A2:
000587 5d20      	SUBI R18,-LOW(48)
                 _0x20200A5:
000588 fd04      	SBRC R16,4
000589 c021      	RJMP _0x20200A7
00058a 3321      	CPI  R18,49
00058b f460      	BRSH _0x20200A9
                +
00058c 89a8     +LDD R26 , Y + 16
00058d 89b9     +LDD R27 , Y + 16 + 1
00058e 898a     +LDD R24 , Y + 16 + 2
00058f 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000590 30a1     +CPI R26 , LOW ( 0x1 )
000591 e0e0     +LDI R30 , HIGH ( 0x1 )
000592 07be     +CPC R27 , R30
000593 e0e0     +LDI R30 , BYTE3 ( 0x1 )
000594 078e     +CPC R24 , R30
000595 e0e0     +LDI R30 , BYTE4 ( 0x1 )
000596 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000597 f409      	BRNE _0x20200A8
                 _0x20200A9:
000598 c00b      	RJMP _0x20200AB
                 _0x20200A8:
000599 1743      	CP   R20,R19
00059a f440      	BRSH _0x2020119
00059b 1753      	CP   R21,R19
00059c f010      	BRLO _0x20200AE
00059d ff00      	SBRS R16,0
00059e c001      	RJMP _0x20200AF
                 _0x20200AE:
00059f c010      	RJMP _0x20200AD
                 _0x20200AF:
0005a0 e220      	LDI  R18,LOW(32)
0005a1 ff07      	SBRS R16,7
0005a2 c008      	RJMP _0x20200B0
                 _0x2020119:
0005a3 e320      	LDI  R18,LOW(48)
                 _0x20200AB:
0005a4 6100      	ORI  R16,LOW(16)
0005a5 ff02      	SBRS R16,2
0005a6 c004      	RJMP _0x20200B1
0005a7 940e 0816 	CALL SUBOPT_0x23
0005a9 f009      	BREQ _0x20200B2
0005aa 5051      	SUBI R21,LOW(1)
                 _0x20200B2:
                 _0x20200B1:
                 _0x20200B0:
                 _0x20200A7:
0005ab 940e 07d6 	CALL SUBOPT_0x18
0005ad 3050      	CPI  R21,0
0005ae f009      	BREQ _0x20200B3
0005af 5051      	SUBI R21,LOW(1)
                 _0x20200B3:
                 _0x20200AD:
0005b0 5031      	SUBI R19,LOW(1)
0005b1 940e 0828 	CALL SUBOPT_0x24
0005b3 940e 0a6f 	CALL __MODD21U
0005b5 940e 07f8 	CALL SUBOPT_0x1D
0005b7 89ec      	LDD  R30,Y+20
                +
0005b8 89a8     +LDD R26 , Y + 16
0005b9 89b9     +LDD R27 , Y + 16 + 1
0005ba 898a     +LDD R24 , Y + 16 + 2
0005bb 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0005bc 27ff      	CLR  R31
0005bd 2766      	CLR  R22
0005be 2777      	CLR  R23
0005bf 940e 0a3e 	CALL __DIVD21U
0005c1 940e 0811 	CALL SUBOPT_0x22
                +
0005c3 89e8     +LDD R30 , Y + 16
0005c4 89f9     +LDD R31 , Y + 16 + 1
0005c5 896a     +LDD R22 , Y + 16 + 2
0005c6 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
0005c7 940e 0aaf 	CALL __CPD10
0005c9 f009      	BREQ _0x20200A1
0005ca cfaf      	RJMP _0x20200A0
                 _0x20200A1:
                 _0x202009E:
0005cb ff00      	SBRS R16,0
0005cc c008      	RJMP _0x20200B4
                 _0x20200B5:
0005cd 3050      	CPI  R21,0
0005ce f031      	BREQ _0x20200B7
0005cf 5051      	SUBI R21,LOW(1)
0005d0 e2e0      	LDI  R30,LOW(32)
0005d1 93ea      	ST   -Y,R30
0005d2 940e 07eb 	CALL SUBOPT_0x1B
0005d4 cff8      	RJMP _0x20200B5
                 _0x20200B7:
                 _0x20200B4:
                 _0x20200B8:
                 _0x2020054:
                 _0x2020117:
0005d5 e010      	LDI  R17,LOW(0)
                 _0x2020035:
0005d6 ce0c      	RJMP _0x2020030
                 _0x2020032:
0005d7 81ae      	LDD  R26,Y+6
0005d8 81bf      	LDD  R27,Y+6+1
0005d9 940e 0a7f 	CALL __GETW1P
0005db 940e 0aba 	CALL __LOADLOCR6
0005dd 96ef      	ADIW R28,63
0005de 966f      	ADIW R28,31
0005df 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0005e0 92ff      	PUSH R15
0005e1 2ef8      	MOV  R15,R24
0005e2 9726      	SBIW R28,6
0005e3 940e 0ab5 	CALL __SAVELOCR4
0005e5 940e 0831 	CALL SUBOPT_0x25
0005e7 9730      	SBIW R30,0
0005e8 f419      	BRNE _0x20200B9
0005e9 efef      	LDI  R30,LOW(65535)
0005ea efff      	LDI  R31,HIGH(65535)
0005eb c023      	RJMP _0x20C0004
                 _0x20200B9:
0005ec 01de      	MOVW R26,R28
0005ed 9616      	ADIW R26,6
0005ee 940e 0a14 	CALL __ADDW2R15
0005f0 018d      	MOVW R16,R26
0005f1 940e 0831 	CALL SUBOPT_0x25
0005f3 83ee      	STD  Y+6,R30
0005f4 83ff      	STD  Y+6+1,R31
0005f5 e0e0      	LDI  R30,LOW(0)
0005f6 87e8      	STD  Y+8,R30
0005f7 87e9      	STD  Y+8+1,R30
0005f8 01de      	MOVW R26,R28
0005f9 961a      	ADIW R26,10
0005fa 940e 0a14 	CALL __ADDW2R15
0005fc 940e 0a7f 	CALL __GETW1P
0005fe 93fa      	ST   -Y,R31
0005ff 93ea      	ST   -Y,R30
000600 931a      	ST   -Y,R17
000601 930a      	ST   -Y,R16
000602 ebea      	LDI  R30,LOW(_put_buff_G101)
000603 e0f2      	LDI  R31,HIGH(_put_buff_G101)
000604 93fa      	ST   -Y,R31
000605 93ea      	ST   -Y,R30
000606 01de      	MOVW R26,R28
000607 961a      	ADIW R26,10
000608 ddbd      	RCALL __print_G101
000609 019f      	MOVW R18,R30
00060a 81ae      	LDD  R26,Y+6
00060b 81bf      	LDD  R27,Y+6+1
00060c e0e0      	LDI  R30,LOW(0)
00060d 93ec      	ST   X,R30
00060e 01f9      	MOVW R30,R18
                 _0x20C0004:
00060f 940e 0abc 	CALL __LOADLOCR4
000611 962a      	ADIW R28,10
000612 90ff      	POP  R15
000613 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
000614 93ba      	ST   -Y,R27
000615 93aa      	ST   -Y,R26
000616 91e9          ld   r30,y+
000617 91f9          ld   r31,y+
000618 91a9          ld   r26,y+
000619 91b9          ld   r27,y+
00061a 01cd          movw r24,r26
                 strcpyf0:
00061b 9005      	lpm  r0,z+
00061c 920d          st   x+,r0
00061d 2000          tst  r0
00061e f7e1          brne strcpyf0
00061f 01fc          movw r30,r24
000620 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000621 93ba      	ST   -Y,R27
000622 93aa      	ST   -Y,R26
000623 91a9          ld   r26,y+
000624 91b9          ld   r27,y+
000625 27ee          clr  r30
000626 27ff          clr  r31
                 strlen0:
000627 916d          ld   r22,x+
000628 2366          tst  r22
000629 f011          breq strlen1
00062a 9631          adiw r30,1
00062b cffb          rjmp strlen0
                 strlen1:
00062c 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00062d 93ba      	ST   -Y,R27
00062e 93aa      	ST   -Y,R26
00062f 27aa          clr  r26
000630 27bb          clr  r27
000631 91e9          ld   r30,y+
000632 91f9          ld   r31,y+
                 strlenf0:
000633 9005      	lpm  r0,z+
000634 2000          tst  r0
000635 f011          breq strlenf1
000636 9611          adiw r26,1
000637 cffb          rjmp strlenf0
                 strlenf1:
000638 01fd          movw r30,r26
000639 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
00063a 940e 0a9d 	CALL __PUTPARD2
00063c 817b         ldd  r23,y+3
00063d 816a         ldd  r22,y+2
00063e 81f9         ldd  r31,y+1
00063f 81e8         ld   r30,y
000640 fb77         bst  r23,7
000641 0f77         lsl  r23
000642 fd67         sbrc r22,7
000643 6071         sbr  r23,1
000644 2f97         mov  r25,r23
000645 579e         subi r25,0x7e
000646 f081         breq __ftrunc0
000647 f078         brcs __ftrunc0
000648 3198         cpi  r25,24
000649 f490         brsh __ftrunc1
00064a 27aa         clr  r26
00064b 27bb         clr  r27
00064c 2788         clr  r24
                 __ftrunc2:
00064d 9408         sec
00064e 9587         ror  r24
00064f 95b7         ror  r27
000650 95a7         ror  r26
000651 959a         dec  r25
000652 f7d1         brne __ftrunc2
000653 23ea         and  r30,r26
000654 23fb         and  r31,r27
000655 2368         and  r22,r24
000656 c005         rjmp __ftrunc1
                 __ftrunc0:
000657 94e8         clt
000658 2777         clr  r23
000659 27ee         clr  r30
00065a 27ff         clr  r31
00065b 2766         clr  r22
                 __ftrunc1:
00065c 776f         cbr  r22,0x80
00065d 9576         lsr  r23
00065e f408         brcc __ftrunc3
00065f 6860         sbr  r22,0x80
                 __ftrunc3:
000660 f977         bld  r23,7
000661 91a9         ld   r26,y+
000662 91b9         ld   r27,y+
000663 9189         ld   r24,y+
000664 9199         ld   r25,y+
000665 17ea         cp   r30,r26
000666 07fb         cpc  r31,r27
000667 0768         cpc  r22,r24
000668 0779         cpc  r23,r25
000669 fb97         bst  r25,7
00066a 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
00066b 940e 0a9d 	CALL __PUTPARD2
00066d 940e 0a8e 	CALL __GETD2S0
00066f 940e 063a 	CALL _ftrunc
000671 940e 0a93 	CALL __PUTD1S0
000673 f419          brne __floor1
                 __floor0:
000674 940e 0a89 	CALL __GETD1S0
000676 c009      	RJMP _0x20C0003
                 __floor1:
000677 f7e6          brtc __floor0
000678 940e 0a89 	CALL __GETD1S0
                +
00067a e0a0     +LDI R26 , LOW ( 0x3F800000 )
00067b e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00067c e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00067d e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00067e 940e 090a 	CALL __SUBF12
                 _0x20C0003:
000680 9624      	ADIW R28,4
000681 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
000682 d0f0      	RCALL SUBOPT_0xB
000683 e0e0      	LDI  R30,LOW(0)
000684 83ea      	STD  Y+2,R30
000685 e3ef      	LDI  R30,LOW(63)
000686 83eb      	STD  Y+3,R30
000687 931a      	ST   -Y,R17
000688 930a      	ST   -Y,R16
000689 85eb      	LDD  R30,Y+11
00068a 85fc      	LDD  R31,Y+11+1
00068b 3fef      	CPI  R30,LOW(0xFFFF)
00068c efaf      	LDI  R26,HIGH(0xFFFF)
00068d 07fa      	CPC  R31,R26
00068e f431      	BRNE _0x20A000D
00068f d1a8      	RCALL SUBOPT_0x26
                +
000690 e9a4     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 0 ) )
000691 e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 0 ) )
                 	__POINTW2FN _0x20A0000,0
000692 940e 0614 	CALL _strcpyf
000694 c087      	RJMP _0x20C0002
                 _0x20A000D:
000695 3fef      	CPI  R30,LOW(0x7FFF)
000696 e7af      	LDI  R26,HIGH(0x7FFF)
000697 07fa      	CPC  R31,R26
000698 f431      	BRNE _0x20A000C
000699 d19e      	RCALL SUBOPT_0x26
                +
00069a e9a5     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 1 ) )
00069b e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 1 ) )
                 	__POINTW2FN _0x20A0000,1
00069c 940e 0614 	CALL _strcpyf
00069e c07d      	RJMP _0x20C0002
                 _0x20A000C:
00069f 85ac      	LDD  R26,Y+12
0006a0 23aa      	TST  R26
0006a1 f452      	BRPL _0x20A000F
                +
0006a2 85e9     +LDD R30 , Y + 9
0006a3 85fa     +LDD R31 , Y + 9 + 1
0006a4 856b     +LDD R22 , Y + 9 + 2
0006a5 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0006a6 940e 086b 	CALL __ANEGF1
0006a8 d194      	RCALL SUBOPT_0x27
0006a9 d198      	RCALL SUBOPT_0x28
0006aa e2ed      	LDI  R30,LOW(45)
0006ab 93ec      	ST   X,R30
                 _0x20A000F:
0006ac 85a8      	LDD  R26,Y+8
0006ad 30a7      	CPI  R26,LOW(0x7)
0006ae f010      	BRLO _0x20A0010
0006af e0e6      	LDI  R30,LOW(6)
0006b0 87e8      	STD  Y+8,R30
                 _0x20A0010:
0006b1 8518      	LDD  R17,Y+8
                 _0x20A0011:
0006b2 2fe1      	MOV  R30,R17
0006b3 5011      	SUBI R17,1
0006b4 30e0      	CPI  R30,0
0006b5 f021      	BREQ _0x20A0013
0006b6 d192      	RCALL SUBOPT_0x29
0006b7 d100      	RCALL SUBOPT_0x13
0006b8 d195      	RCALL SUBOPT_0x2A
0006b9 cff8      	RJMP _0x20A0011
                 _0x20A0013:
0006ba d198      	RCALL SUBOPT_0x2B
0006bb 940e 0911 	CALL __ADDF12
0006bd d17f      	RCALL SUBOPT_0x27
0006be e010      	LDI  R17,LOW(0)
0006bf d09f      	RCALL SUBOPT_0x7
0006c0 d18d      	RCALL SUBOPT_0x2A
                 _0x20A0014:
0006c1 d191      	RCALL SUBOPT_0x2B
0006c2 940e 09f4 	CALL __CMPF12
0006c4 f068      	BRLO _0x20A0016
0006c5 d183      	RCALL SUBOPT_0x29
0006c6 d0de      	RCALL SUBOPT_0x10
0006c7 d186      	RCALL SUBOPT_0x2A
0006c8 5f1f      	SUBI R17,-LOW(1)
0006c9 3217      	CPI  R17,39
0006ca f030      	BRLO _0x20A0017
0006cb d16c      	RCALL SUBOPT_0x26
                +
0006cc e9a9     +LDI R26 , LOW ( 2 * _0x20A0000 + ( 5 ) )
0006cd e0b0     +LDI R27 , HIGH ( 2 * _0x20A0000 + ( 5 ) )
                 	__POINTW2FN _0x20A0000,5
0006ce 940e 0614 	CALL _strcpyf
0006d0 c04b      	RJMP _0x20C0002
                 _0x20A0017:
0006d1 cfef      	RJMP _0x20A0014
                 _0x20A0016:
0006d2 3010      	CPI  R17,0
0006d3 f421      	BRNE _0x20A0018
0006d4 d16d      	RCALL SUBOPT_0x28
0006d5 e3e0      	LDI  R30,LOW(48)
0006d6 93ec      	ST   X,R30
0006d7 c020      	RJMP _0x20A0019
                 _0x20A0018:
                 _0x20A001A:
0006d8 2fe1      	MOV  R30,R17
0006d9 5011      	SUBI R17,1
0006da 30e0      	CPI  R30,0
0006db f0e1      	BREQ _0x20A001C
0006dc d16c      	RCALL SUBOPT_0x29
0006dd d0da      	RCALL SUBOPT_0x13
0006de d0d2      	RCALL SUBOPT_0x12
0006df 01df      	MOVW R26,R30
0006e0 01cb      	MOVW R24,R22
0006e1 940e 066b 	CALL _floor
0006e3 d16a      	RCALL SUBOPT_0x2A
0006e4 d16e      	RCALL SUBOPT_0x2B
0006e5 940e 09af 	CALL __DIVF21
0006e7 940e 089e 	CALL __CFD1U
0006e9 2f0e      	MOV  R16,R30
0006ea d157      	RCALL SUBOPT_0x28
0006eb d0da      	RCALL SUBOPT_0x15
0006ec e0f0      	LDI  R31,0
0006ed d15b      	RCALL SUBOPT_0x29
0006ee 940e 0a26 	CALL __CWD1
0006f0 940e 08d7 	CALL __CDF1
0006f2 940e 0961 	CALL __MULF12
0006f4 d167      	RCALL SUBOPT_0x2C
0006f5 d0d5      	RCALL SUBOPT_0x16
0006f6 d146      	RCALL SUBOPT_0x27
0006f7 cfe0      	RJMP _0x20A001A
                 _0x20A001C:
                 _0x20A0019:
0006f8 85e8      	LDD  R30,Y+8
0006f9 30e0      	CPI  R30,0
0006fa f0e9      	BREQ _0x20C0001
0006fb d146      	RCALL SUBOPT_0x28
0006fc e2ee      	LDI  R30,LOW(46)
0006fd 93ec      	ST   X,R30
                 _0x20A001E:
0006fe 85e8      	LDD  R30,Y+8
0006ff 50e1      	SUBI R30,LOW(1)
000700 87e8      	STD  Y+8,R30
000701 5fef      	SUBI R30,-LOW(1)
000702 f0a9      	BREQ _0x20A0020
000703 d158      	RCALL SUBOPT_0x2C
000704 d0a0      	RCALL SUBOPT_0x10
000705 d137      	RCALL SUBOPT_0x27
                +
000706 85e9     +LDD R30 , Y + 9
000707 85fa     +LDD R31 , Y + 9 + 1
000708 856b     +LDD R22 , Y + 9 + 2
000709 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00070a 940e 089e 	CALL __CFD1U
00070c 2f0e      	MOV  R16,R30
00070d d134      	RCALL SUBOPT_0x28
00070e d0b7      	RCALL SUBOPT_0x15
00070f e0f0      	LDI  R31,0
000710 d14b      	RCALL SUBOPT_0x2C
000711 940e 0a26 	CALL __CWD1
000713 940e 08d7 	CALL __CDF1
000715 d0b5      	RCALL SUBOPT_0x16
000716 d126      	RCALL SUBOPT_0x27
000717 cfe6      	RJMP _0x20A001E
                 _0x20A0020:
                 _0x20C0001:
000718 81ae      	LDD  R26,Y+6
000719 81bf      	LDD  R27,Y+6+1
00071a e0e0      	LDI  R30,LOW(0)
00071b 93ec      	ST   X,R30
                 _0x20C0002:
00071c 8119      	LDD  R17,Y+1
00071d 8108      	LDD  R16,Y+0
00071e 962d      	ADIW R28,13
00071f 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _buffer:
000260           	.BYTE 0x40
                 _SP:
0002a0           	.BYTE 0x4
                 _temp:
0002a4           	.BYTE 0x4
                 _error:
0002a8           	.BYTE 0x4
                 _last_error:
0002ac           	.BYTE 0x4
                 _last_iterm:
0002b0           	.BYTE 0x4
                 _kp:
0002b4           	.BYTE 0x4
                 _ki:
0002b8           	.BYTE 0x4
                 _kd:
0002bc           	.BYTE 0x4
                 _pterm:
0002c0           	.BYTE 0x4
                 _iterm:
0002c4           	.BYTE 0x4
                 _dterm:
0002c8           	.BYTE 0x4
                 _D:
0002cc           	.BYTE 0x4
                 __base_y_G100:
0002d0           	.BYTE 0x4
                 __seed_G105:
0002d4           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
000720 93e0 02a4 	STS  _temp,R30
000722 93f0 02a5 	STS  _temp+1,R31
000724 9360 02a6 	STS  _temp+2,R22
000726 9370 02a7 	STS  _temp+3,R23
000728 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
000729 91a0 02a4 	LDS  R26,_temp
00072b 91b0 02a5 	LDS  R27,_temp+1
00072d 9180 02a6 	LDS  R24,_temp+2
00072f 9190 02a7 	LDS  R25,_temp+3
000731 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000732 91e0 02a0 	LDS  R30,_SP
000734 91f0 02a1 	LDS  R31,_SP+1
000736 9160 02a2 	LDS  R22,_SP+2
000738 9170 02a3 	LDS  R23,_SP+3
00073a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3:
00073b 91e0 02a8 	LDS  R30,_error
00073d 91f0 02a9 	LDS  R31,_error+1
00073f 9160 02aa 	LDS  R22,_error+2
000741 9170 02ab 	LDS  R23,_error+3
000743 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
000744 91e0 02c4 	LDS  R30,_iterm
000746 91f0 02c5 	LDS  R31,_iterm+1
000748 9160 02c6 	LDS  R22,_iterm+2
00074a 9170 02c7 	LDS  R23,_iterm+3
00074c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5:
00074d 93e0 02cc 	STS  _D,R30
00074f 93f0 02cd 	STS  _D+1,R31
000751 9360 02ce 	STS  _D+2,R22
000753 9370 02cf 	STS  _D+3,R23
000755 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
000756 91a0 02cc 	LDS  R26,_D
000758 91b0 02cd 	LDS  R27,_D+1
00075a 9180 02ce 	LDS  R24,_D+2
00075c 9190 02cf 	LDS  R25,_D+3
00075e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
                +
00075f e0e0     +LDI R30 , LOW ( 0x3F800000 )
000760 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000761 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000762 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000763 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
000764 940e 0276 	CALL __long_delay_G100
000766 e3a0      	LDI  R26,LOW(48)
000767 940c 027b 	JMP  __lcd_init_write_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000769 940e 0207 	CALL __lcd_write_data
00076b 940c 0276 	JMP  __long_delay_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
00076d 91ed      	LD   R30,X+
00076e 91fd      	LD   R31,X+
00076f 9631      	ADIW R30,1
000770 93fe      	ST   -X,R31
000771 93ee      	ST   -X,R30
000772 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xB:
000773 93ba      	ST   -Y,R27
000774 93aa      	ST   -Y,R26
000775 9724      	SBIW R28,4
000776 e0e0      	LDI  R30,LOW(0)
000777 83e8      	ST   Y,R30
000778 83e9      	STD  Y+1,R30
000779 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0xC:
                +
00077a 81ac     +LDD R26 , Y + 4
00077b 81bd     +LDD R27 , Y + 4 + 1
00077c 818e     +LDD R24 , Y + 4 + 2
00077d 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
00077e e0e0     +LDI R30 , LOW ( 0x41200000 )
00077f e0f0     +LDI R31 , HIGH ( 0x41200000 )
000780 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000781 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000782 940e 0961 	CALL __MULF12
                +
000784 83ec     +STD Y + 4 , R30
000785 83fd     +STD Y + 4 + 1 , R31
000786 836e     +STD Y + 4 + 2 , R22
000787 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000788 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xD:
                +
000789 81ec     +LDD R30 , Y + 4
00078a 81fd     +LDD R31 , Y + 4 + 1
00078b 816e     +LDD R22 , Y + 4 + 2
00078c 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
00078d 85ac     +LDD R26 , Y + 12
00078e 85bd     +LDD R27 , Y + 12 + 1
00078f 858e     +LDD R24 , Y + 12 + 2
000790 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000791 940e 09f4 	CALL __CMPF12
000793 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xE:
                +
000794 85ac     +LDD R26 , Y + 12
000795 85bd     +LDD R27 , Y + 12 + 1
000796 858e     +LDD R24 , Y + 12 + 2
000797 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000798 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xF:
                +
000799 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00079a ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00079b ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00079c e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00079d 940e 0961 	CALL __MULF12
                +
00079f 87ec     +STD Y + 12 , R30
0007a0 87fd     +STD Y + 12 + 1 , R31
0007a1 876e     +STD Y + 12 + 2 , R22
0007a2 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0007a3 5f3f      	SUBI R19,-LOW(1)
0007a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
                +
0007a5 e0e0     +LDI R30 , LOW ( 0x41200000 )
0007a6 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0007a7 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0007a8 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0007a9 940e 0961 	CALL __MULF12
0007ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
                +
0007ac 87ec     +STD Y + 12 , R30
0007ad 87fd     +STD Y + 12 + 1 , R31
0007ae 876e     +STD Y + 12 + 2 , R22
0007af 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0007b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12:
                +
0007b1 e0a0     +LDI R26 , LOW ( 0x3F000000 )
0007b2 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0007b3 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0007b4 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0007b5 940e 0911 	CALL __ADDF12
0007b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x13:
                +
0007b8 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0007b9 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0007ba ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0007bb e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0007bc 940e 0961 	CALL __MULF12
0007be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
0007bf 85a8      	LDD  R26,Y+8
0007c0 85b9      	LDD  R27,Y+8+1
0007c1 9611      	ADIW R26,1
0007c2 87a8      	STD  Y+8,R26
0007c3 87b9      	STD  Y+8+1,R27
0007c4 9711      	SBIW R26,1
0007c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
0007c6 2fe0      	MOV  R30,R16
0007c7 5de0      	SUBI R30,-LOW(48)
0007c8 93ec      	ST   X,R30
0007c9 2fe0      	MOV  R30,R16
0007ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16:
0007cb 940e 0aa2 	CALL __SWAPD12
0007cd 940e 090a 	CALL __SUBF12
0007cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x17:
0007d0 85e8      	LDD  R30,Y+8
0007d1 85f9      	LDD  R31,Y+8+1
0007d2 9631      	ADIW R30,1
0007d3 87e8      	STD  Y+8,R30
0007d4 87f9      	STD  Y+8+1,R31
0007d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x18:
0007d6 932a      	ST   -Y,R18
0007d7 81af      	LDD  R26,Y+7
0007d8 85b8      	LDD  R27,Y+7+1
0007d9 85e9      	LDD  R30,Y+9
0007da 85fa      	LDD  R31,Y+9+1
0007db 9509      	ICALL
0007dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x19:
                +
0007dd 01fe     +MOVW R30 , R28
0007de 5ae6     +SUBI R30 , LOW ( - 90 )
0007df 4fff     +SBCI R31 , HIGH ( - 90 )
0007e0 9001     +LD R0 , Z +
0007e1 81f0     +LD R31 , Z
0007e2 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0007e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1A:
0007e4 9734      	SBIW R30,4
                +
0007e5 01de     +MOVW R26 , R28
0007e6 5aa6     +SUBI R26 , LOW ( - 90 )
0007e7 4fbf     +SBCI R27 , HIGH ( - 90 )
0007e8 93ed     +ST X + , R30
0007e9 93fc     +ST X , R31
                 	__PUTW1SX 90
0007ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1B:
0007eb 81af      	LDD  R26,Y+7
0007ec 85b8      	LDD  R27,Y+7+1
0007ed 85e9      	LDD  R30,Y+9
0007ee 85fa      	LDD  R31,Y+9+1
0007ef 9509      	ICALL
0007f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1C:
                +
0007f1 01de     +MOVW R26 , R28
0007f2 5aa6     +SUBI R26 , LOW ( - 90 )
0007f3 4fbf     +SBCI R27 , HIGH ( - 90 )
0007f4 900d     +LD R0 , X +
0007f5 91bc     +LD R27 , X
0007f6 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0007f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
                +
0007f8 87ea     +STD Y + 10 , R30
0007f9 87fb     +STD Y + 10 + 1 , R31
0007fa 876c     +STD Y + 10 + 2 , R22
0007fb 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0007fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1E:
0007fd dfdf      	RCALL SUBOPT_0x19
0007fe cfe5      	RJMP SUBOPT_0x1A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F:
                +
0007ff 85ea     +LDD R30 , Y + 10
000800 85fb     +LDD R31 , Y + 10 + 1
000801 856c     +LDD R22 , Y + 10 + 2
000802 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000803 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x20:
000804 87ee      	STD  Y+14,R30
000805 87ff      	STD  Y+14+1,R31
000806 85ae      	LDD  R26,Y+14
000807 85bf      	LDD  R27,Y+14+1
000808 940e 0621 	CALL _strlen
00080a 2f1e      	MOV  R17,R30
00080b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x21:
00080c dfe4      	RCALL SUBOPT_0x1C
00080d 9614      	ADIW R26,4
00080e 940e 0a7f 	CALL __GETW1P
000810 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x22:
                +
000811 8be8     +STD Y + 16 , R30
000812 8bf9     +STD Y + 16 + 1 , R31
000813 8b6a     +STD Y + 16 + 2 , R22
000814 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000815 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x23:
000816 7f0b      	ANDI R16,LOW(251)
000817 89ed      	LDD  R30,Y+21
000818 93ea      	ST   -Y,R30
                +
000819 01de     +MOVW R26 , R28
00081a 5aa9     +SUBI R26 , LOW ( - 87 )
00081b 4fbf     +SBCI R27 , HIGH ( - 87 )
00081c 900d     +LD R0 , X +
00081d 91bc     +LD R27 , X
00081e 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
00081f 01fe     +MOVW R30 , R28
000820 5ae7     +SUBI R30 , LOW ( - 89 )
000821 4fff     +SBCI R31 , HIGH ( - 89 )
000822 9001     +LD R0 , Z +
000823 81f0     +LD R31 , Z
000824 2de0     +MOV R30 , R0
                 	__GETW1SX 89
000825 9509      	ICALL
000826 3050      	CPI  R21,0
000827 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24:
                +
000828 89e8     +LDD R30 , Y + 16
000829 89f9     +LDD R31 , Y + 16 + 1
00082a 896a     +LDD R22 , Y + 16 + 2
00082b 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
00082c 85aa     +LDD R26 , Y + 10
00082d 85bb     +LDD R27 , Y + 10 + 1
00082e 858c     +LDD R24 , Y + 10 + 2
00082f 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000830 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
000831 01de      	MOVW R26,R28
000832 961c      	ADIW R26,12
000833 940e 0a14 	CALL __ADDW2R15
000835 940e 0a7f 	CALL __GETW1P
000837 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
000838 81ee      	LDD  R30,Y+6
000839 81ff      	LDD  R31,Y+6+1
00083a 93fa      	ST   -Y,R31
00083b 93ea      	ST   -Y,R30
00083c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x27:
                +
00083d 87e9     +STD Y + 9 , R30
00083e 87fa     +STD Y + 9 + 1 , R31
00083f 876b     +STD Y + 9 + 2 , R22
000840 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000841 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x28:
000842 81ae      	LDD  R26,Y+6
000843 81bf      	LDD  R27,Y+6+1
000844 9611      	ADIW R26,1
000845 83ae      	STD  Y+6,R26
000846 83bf      	STD  Y+6+1,R27
000847 9711      	SBIW R26,1
000848 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x29:
                +
000849 81aa     +LDD R26 , Y + 2
00084a 81bb     +LDD R27 , Y + 2 + 1
00084b 818c     +LDD R24 , Y + 2 + 2
00084c 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00084d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A:
                +
00084e 83ea     +STD Y + 2 , R30
00084f 83fb     +STD Y + 2 + 1 , R31
000850 836c     +STD Y + 2 + 2 , R22
000851 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000852 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2B:
                +
000853 81ea     +LDD R30 , Y + 2
000854 81fb     +LDD R31 , Y + 2 + 1
000855 816c     +LDD R22 , Y + 2 + 2
000856 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000857 85a9     +LDD R26 , Y + 9
000858 85ba     +LDD R27 , Y + 9 + 1
000859 858b     +LDD R24 , Y + 9 + 2
00085a 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00085b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
                +
00085c 85a9     +LDD R26 , Y + 9
00085d 85ba     +LDD R27 , Y + 9 + 1
00085e 858b     +LDD R24 , Y + 9 + 2
00085f 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000860 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000861 9610      	adiw r26,0
000862 f039      	breq __delay_ms1
                 __delay_ms0:
000863 95a8      	wdr
                +
000864 ed80     +LDI R24 , LOW ( 0x7D0 )
000865 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000866 9701     +SBIW R24 , 1
000867 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000868 9711      	sbiw r26,1
000869 f7c9      	brne __delay_ms0
                 __delay_ms1:
00086a 9508      	ret
                 
                 __ANEGF1:
00086b 9730      	SBIW R30,0
00086c 4060      	SBCI R22,0
00086d 4070      	SBCI R23,0
00086e f009      	BREQ __ANEGF10
00086f 5870      	SUBI R23,0x80
                 __ANEGF10:
000870 9508      	RET
                 
                 __ROUND_REPACK:
000871 2355      	TST  R21
000872 f442      	BRPL __REPACK
000873 3850      	CPI  R21,0x80
000874 f411      	BRNE __ROUND_REPACK0
000875 ffe0      	SBRS R30,0
000876 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000877 9631      	ADIW R30,1
000878 1f69      	ADC  R22,R25
000879 1f79      	ADC  R23,R25
00087a f06b      	BRVS __REPACK1
                 
                 __REPACK:
00087b e850      	LDI  R21,0x80
00087c 2757      	EOR  R21,R23
00087d f411      	BRNE __REPACK0
00087e 935f      	PUSH R21
00087f c0cf      	RJMP __ZERORES
                 __REPACK0:
000880 3f5f      	CPI  R21,0xFF
000881 f031      	BREQ __REPACK1
000882 0f66      	LSL  R22
000883 0c00      	LSL  R0
000884 9557      	ROR  R21
000885 9567      	ROR  R22
000886 2f75      	MOV  R23,R21
000887 9508      	RET
                 __REPACK1:
000888 935f      	PUSH R21
000889 2000      	TST  R0
00088a f00a      	BRMI __REPACK2
00088b c0cf      	RJMP __MAXRES
                 __REPACK2:
00088c c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00088d e850      	LDI  R21,0x80
00088e 2e19      	MOV  R1,R25
00088f 2215      	AND  R1,R21
000890 0f88      	LSL  R24
000891 1f99      	ROL  R25
000892 2795      	EOR  R25,R21
000893 0f55      	LSL  R21
000894 9587      	ROR  R24
                 
                 __UNPACK1:
000895 e850      	LDI  R21,0x80
000896 2e07      	MOV  R0,R23
000897 2205      	AND  R0,R21
000898 0f66      	LSL  R22
000899 1f77      	ROL  R23
00089a 2775      	EOR  R23,R21
00089b 0f55      	LSL  R21
00089c 9567      	ROR  R22
00089d 9508      	RET
                 
                 __CFD1U:
00089e 9468      	SET
00089f c001      	RJMP __CFD1U0
                 __CFD1:
0008a0 94e8      	CLT
                 __CFD1U0:
0008a1 935f      	PUSH R21
0008a2 dff2      	RCALL __UNPACK1
0008a3 3870      	CPI  R23,0x80
0008a4 f018      	BRLO __CFD10
0008a5 3f7f      	CPI  R23,0xFF
0008a6 f408      	BRCC __CFD10
0008a7 c0a7      	RJMP __ZERORES
                 __CFD10:
0008a8 e156      	LDI  R21,22
0008a9 1b57      	SUB  R21,R23
0008aa f4aa      	BRPL __CFD11
0008ab 9551      	NEG  R21
0008ac 3058      	CPI  R21,8
0008ad f40e      	BRTC __CFD19
0008ae 3059      	CPI  R21,9
                 __CFD19:
0008af f030      	BRLO __CFD17
0008b0 efef      	SER  R30
0008b1 efff      	SER  R31
0008b2 ef6f      	SER  R22
0008b3 e77f      	LDI  R23,0x7F
0008b4 f977      	BLD  R23,7
0008b5 c01a      	RJMP __CFD15
                 __CFD17:
0008b6 2777      	CLR  R23
0008b7 2355      	TST  R21
0008b8 f0b9      	BREQ __CFD15
                 __CFD18:
0008b9 0fee      	LSL  R30
0008ba 1fff      	ROL  R31
0008bb 1f66      	ROL  R22
0008bc 1f77      	ROL  R23
0008bd 955a      	DEC  R21
0008be f7d1      	BRNE __CFD18
0008bf c010      	RJMP __CFD15
                 __CFD11:
0008c0 2777      	CLR  R23
                 __CFD12:
0008c1 3058      	CPI  R21,8
0008c2 f028      	BRLO __CFD13
0008c3 2fef      	MOV  R30,R31
0008c4 2ff6      	MOV  R31,R22
0008c5 2f67      	MOV  R22,R23
0008c6 5058      	SUBI R21,8
0008c7 cff9      	RJMP __CFD12
                 __CFD13:
0008c8 2355      	TST  R21
0008c9 f031      	BREQ __CFD15
                 __CFD14:
0008ca 9576      	LSR  R23
0008cb 9567      	ROR  R22
0008cc 95f7      	ROR  R31
0008cd 95e7      	ROR  R30
0008ce 955a      	DEC  R21
0008cf f7d1      	BRNE __CFD14
                 __CFD15:
0008d0 2000      	TST  R0
0008d1 f40a      	BRPL __CFD16
0008d2 d145      	RCALL __ANEGD1
                 __CFD16:
0008d3 915f      	POP  R21
0008d4 9508      	RET
                 
                 __CDF1U:
0008d5 9468      	SET
0008d6 c001      	RJMP __CDF1U0
                 __CDF1:
0008d7 94e8      	CLT
                 __CDF1U0:
0008d8 9730      	SBIW R30,0
0008d9 4060      	SBCI R22,0
0008da 4070      	SBCI R23,0
0008db f0b1      	BREQ __CDF10
0008dc 2400      	CLR  R0
0008dd f026      	BRTS __CDF11
0008de 2377      	TST  R23
0008df f412      	BRPL __CDF11
0008e0 9400      	COM  R0
0008e1 d136      	RCALL __ANEGD1
                 __CDF11:
0008e2 2e17      	MOV  R1,R23
0008e3 e17e      	LDI  R23,30
0008e4 2011      	TST  R1
                 __CDF12:
0008e5 f032      	BRMI __CDF13
0008e6 957a      	DEC  R23
0008e7 0fee      	LSL  R30
0008e8 1fff      	ROL  R31
0008e9 1f66      	ROL  R22
0008ea 1c11      	ROL  R1
0008eb cff9      	RJMP __CDF12
                 __CDF13:
0008ec 2fef      	MOV  R30,R31
0008ed 2ff6      	MOV  R31,R22
0008ee 2d61      	MOV  R22,R1
0008ef 935f      	PUSH R21
0008f0 df8a      	RCALL __REPACK
0008f1 915f      	POP  R21
                 __CDF10:
0008f2 9508      	RET
                 
                 __SWAPACC:
0008f3 934f      	PUSH R20
0008f4 01af      	MOVW R20,R30
0008f5 01fd      	MOVW R30,R26
0008f6 01da      	MOVW R26,R20
0008f7 01ab      	MOVW R20,R22
0008f8 01bc      	MOVW R22,R24
0008f9 01ca      	MOVW R24,R20
0008fa 2d40      	MOV  R20,R0
0008fb 2c01      	MOV  R0,R1
0008fc 2e14      	MOV  R1,R20
0008fd 914f      	POP  R20
0008fe 9508      	RET
                 
                 __UADD12:
0008ff 0fea      	ADD  R30,R26
000900 1ffb      	ADC  R31,R27
000901 1f68      	ADC  R22,R24
000902 9508      	RET
                 
                 __NEGMAN1:
000903 95e0      	COM  R30
000904 95f0      	COM  R31
000905 9560      	COM  R22
000906 5fef      	SUBI R30,-1
000907 4fff      	SBCI R31,-1
000908 4f6f      	SBCI R22,-1
000909 9508      	RET
                 
                 __SUBF12:
00090a 935f      	PUSH R21
00090b df81      	RCALL __UNPACK
00090c 3890      	CPI  R25,0x80
00090d f171      	BREQ __ADDF129
00090e e850      	LDI  R21,0x80
00090f 2615      	EOR  R1,R21
                 
000910 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000911 935f      	PUSH R21
000912 df7a      	RCALL __UNPACK
000913 3890      	CPI  R25,0x80
000914 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000915 3870      	CPI  R23,0x80
000916 f121      	BREQ __ADDF128
                 __ADDF121:
000917 2f57      	MOV  R21,R23
000918 1b59      	SUB  R21,R25
000919 f12b      	BRVS __ADDF1211
00091a f412      	BRPL __ADDF122
00091b dfd7      	RCALL __SWAPACC
00091c cffa      	RJMP __ADDF121
                 __ADDF122:
00091d 3158      	CPI  R21,24
00091e f018      	BRLO __ADDF123
00091f 27aa      	CLR  R26
000920 27bb      	CLR  R27
000921 2788      	CLR  R24
                 __ADDF123:
000922 3058      	CPI  R21,8
000923 f028      	BRLO __ADDF124
000924 2fab      	MOV  R26,R27
000925 2fb8      	MOV  R27,R24
000926 2788      	CLR  R24
000927 5058      	SUBI R21,8
000928 cff9      	RJMP __ADDF123
                 __ADDF124:
000929 2355      	TST  R21
00092a f029      	BREQ __ADDF126
                 __ADDF125:
00092b 9586      	LSR  R24
00092c 95b7      	ROR  R27
00092d 95a7      	ROR  R26
00092e 955a      	DEC  R21
00092f f7d9      	BRNE __ADDF125
                 __ADDF126:
000930 2d50      	MOV  R21,R0
000931 2551      	EOR  R21,R1
000932 f072      	BRMI __ADDF127
000933 dfcb      	RCALL __UADD12
000934 f438      	BRCC __ADDF129
000935 9567      	ROR  R22
000936 95f7      	ROR  R31
000937 95e7      	ROR  R30
000938 9573      	INC  R23
000939 f413      	BRVC __ADDF129
00093a c020      	RJMP __MAXRES
                 __ADDF128:
00093b dfb7      	RCALL __SWAPACC
                 __ADDF129:
00093c df3e      	RCALL __REPACK
00093d 915f      	POP  R21
00093e 9508      	RET
                 __ADDF1211:
00093f f7d8      	BRCC __ADDF128
000940 cffb      	RJMP __ADDF129
                 __ADDF127:
000941 1bea      	SUB  R30,R26
000942 0bfb      	SBC  R31,R27
000943 0b68      	SBC  R22,R24
000944 f051      	BREQ __ZERORES
000945 f410      	BRCC __ADDF1210
000946 9400      	COM  R0
000947 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000948 2366      	TST  R22
000949 f392      	BRMI __ADDF129
00094a 0fee      	LSL  R30
00094b 1fff      	ROL  R31
00094c 1f66      	ROL  R22
00094d 957a      	DEC  R23
00094e f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00094f 27ee      	CLR  R30
000950 27ff      	CLR  R31
000951 2766      	CLR  R22
000952 2777      	CLR  R23
000953 915f      	POP  R21
000954 9508      	RET
                 
                 __MINRES:
000955 efef      	SER  R30
000956 efff      	SER  R31
000957 e76f      	LDI  R22,0x7F
000958 ef7f      	SER  R23
000959 915f      	POP  R21
00095a 9508      	RET
                 
                 __MAXRES:
00095b efef      	SER  R30
00095c efff      	SER  R31
00095d e76f      	LDI  R22,0x7F
00095e e77f      	LDI  R23,0x7F
00095f 915f      	POP  R21
000960 9508      	RET
                 
                 __MULF12:
000961 935f      	PUSH R21
000962 df2a      	RCALL __UNPACK
000963 3870      	CPI  R23,0x80
000964 f351      	BREQ __ZERORES
000965 3890      	CPI  R25,0x80
000966 f341      	BREQ __ZERORES
000967 2401      	EOR  R0,R1
000968 9408      	SEC
000969 1f79      	ADC  R23,R25
00096a f423      	BRVC __MULF124
00096b f31c      	BRLT __ZERORES
                 __MULF125:
00096c 2000      	TST  R0
00096d f33a      	BRMI __MINRES
00096e cfec      	RJMP __MAXRES
                 __MULF124:
00096f 920f      	PUSH R0
000970 931f      	PUSH R17
000971 932f      	PUSH R18
000972 933f      	PUSH R19
000973 934f      	PUSH R20
000974 2711      	CLR  R17
000975 2722      	CLR  R18
000976 2799      	CLR  R25
000977 9f68      	MUL  R22,R24
000978 01a0      	MOVW R20,R0
000979 9f8f      	MUL  R24,R31
00097a 2d30      	MOV  R19,R0
00097b 0d41      	ADD  R20,R1
00097c 1f59      	ADC  R21,R25
00097d 9f6b      	MUL  R22,R27
00097e 0d30      	ADD  R19,R0
00097f 1d41      	ADC  R20,R1
000980 1f59      	ADC  R21,R25
000981 9f8e      	MUL  R24,R30
000982 d027      	RCALL __MULF126
000983 9fbf      	MUL  R27,R31
000984 d025      	RCALL __MULF126
000985 9f6a      	MUL  R22,R26
000986 d023      	RCALL __MULF126
000987 9fbe      	MUL  R27,R30
000988 d01d      	RCALL __MULF127
000989 9faf      	MUL  R26,R31
00098a d01b      	RCALL __MULF127
00098b 9fae      	MUL  R26,R30
00098c 0d11      	ADD  R17,R1
00098d 1f29      	ADC  R18,R25
00098e 1f39      	ADC  R19,R25
00098f 1f49      	ADC  R20,R25
000990 1f59      	ADC  R21,R25
000991 2fe3      	MOV  R30,R19
000992 2ff4      	MOV  R31,R20
000993 2f65      	MOV  R22,R21
000994 2f52      	MOV  R21,R18
000995 914f      	POP  R20
000996 913f      	POP  R19
000997 912f      	POP  R18
000998 911f      	POP  R17
000999 900f      	POP  R0
00099a 2366      	TST  R22
00099b f02a      	BRMI __MULF122
00099c 0f55      	LSL  R21
00099d 1fee      	ROL  R30
00099e 1fff      	ROL  R31
00099f 1f66      	ROL  R22
0009a0 c002      	RJMP __MULF123
                 __MULF122:
0009a1 9573      	INC  R23
0009a2 f24b      	BRVS __MULF125
                 __MULF123:
0009a3 decd      	RCALL __ROUND_REPACK
0009a4 915f      	POP  R21
0009a5 9508      	RET
                 
                 __MULF127:
0009a6 0d10      	ADD  R17,R0
0009a7 1d21      	ADC  R18,R1
0009a8 1f39      	ADC  R19,R25
0009a9 c002      	RJMP __MULF128
                 __MULF126:
0009aa 0d20      	ADD  R18,R0
0009ab 1d31      	ADC  R19,R1
                 __MULF128:
0009ac 1f49      	ADC  R20,R25
0009ad 1f59      	ADC  R21,R25
0009ae 9508      	RET
                 
                 __DIVF21:
0009af 935f      	PUSH R21
0009b0 dedc      	RCALL __UNPACK
0009b1 3870      	CPI  R23,0x80
0009b2 f421      	BRNE __DIVF210
0009b3 2011      	TST  R1
                 __DIVF211:
0009b4 f40a      	BRPL __DIVF219
0009b5 cf9f      	RJMP __MINRES
                 __DIVF219:
0009b6 cfa4      	RJMP __MAXRES
                 __DIVF210:
0009b7 3890      	CPI  R25,0x80
0009b8 f409      	BRNE __DIVF218
                 __DIVF217:
0009b9 cf95      	RJMP __ZERORES
                 __DIVF218:
0009ba 2401      	EOR  R0,R1
0009bb 9408      	SEC
0009bc 0b97      	SBC  R25,R23
0009bd f41b      	BRVC __DIVF216
0009be f3d4      	BRLT __DIVF217
0009bf 2000      	TST  R0
0009c0 cff3      	RJMP __DIVF211
                 __DIVF216:
0009c1 2f79      	MOV  R23,R25
0009c2 931f      	PUSH R17
0009c3 932f      	PUSH R18
0009c4 933f      	PUSH R19
0009c5 934f      	PUSH R20
0009c6 2411      	CLR  R1
0009c7 2711      	CLR  R17
0009c8 2722      	CLR  R18
0009c9 2733      	CLR  R19
0009ca 2744      	CLR  R20
0009cb 2755      	CLR  R21
0009cc e290      	LDI  R25,32
                 __DIVF212:
0009cd 17ae      	CP   R26,R30
0009ce 07bf      	CPC  R27,R31
0009cf 0786      	CPC  R24,R22
0009d0 0741      	CPC  R20,R17
0009d1 f030      	BRLO __DIVF213
0009d2 1bae      	SUB  R26,R30
0009d3 0bbf      	SBC  R27,R31
0009d4 0b86      	SBC  R24,R22
0009d5 0b41      	SBC  R20,R17
0009d6 9408      	SEC
0009d7 c001      	RJMP __DIVF214
                 __DIVF213:
0009d8 9488      	CLC
                 __DIVF214:
0009d9 1f55      	ROL  R21
0009da 1f22      	ROL  R18
0009db 1f33      	ROL  R19
0009dc 1c11      	ROL  R1
0009dd 1faa      	ROL  R26
0009de 1fbb      	ROL  R27
0009df 1f88      	ROL  R24
0009e0 1f44      	ROL  R20
0009e1 959a      	DEC  R25
0009e2 f751      	BRNE __DIVF212
0009e3 01f9      	MOVW R30,R18
0009e4 2d61      	MOV  R22,R1
0009e5 914f      	POP  R20
0009e6 913f      	POP  R19
0009e7 912f      	POP  R18
0009e8 911f      	POP  R17
0009e9 2366      	TST  R22
0009ea f032      	BRMI __DIVF215
0009eb 0f55      	LSL  R21
0009ec 1fee      	ROL  R30
0009ed 1fff      	ROL  R31
0009ee 1f66      	ROL  R22
0009ef 957a      	DEC  R23
0009f0 f243      	BRVS __DIVF217
                 __DIVF215:
0009f1 de7f      	RCALL __ROUND_REPACK
0009f2 915f      	POP  R21
0009f3 9508      	RET
                 
                 __CMPF12:
0009f4 2399      	TST  R25
0009f5 f09a      	BRMI __CMPF120
0009f6 2377      	TST  R23
0009f7 f042      	BRMI __CMPF121
0009f8 1797      	CP   R25,R23
0009f9 f048      	BRLO __CMPF122
0009fa f429      	BRNE __CMPF121
0009fb 17ae      	CP   R26,R30
0009fc 07bf      	CPC  R27,R31
0009fd 0786      	CPC  R24,R22
0009fe f020      	BRLO __CMPF122
0009ff f031      	BREQ __CMPF123
                 __CMPF121:
000a00 9498      	CLZ
000a01 9488      	CLC
000a02 9508      	RET
                 __CMPF122:
000a03 9498      	CLZ
000a04 9408      	SEC
000a05 9508      	RET
                 __CMPF123:
000a06 9418      	SEZ
000a07 9488      	CLC
000a08 9508      	RET
                 __CMPF120:
000a09 2377      	TST  R23
000a0a f7c2      	BRPL __CMPF122
000a0b 1797      	CP   R25,R23
000a0c f398      	BRLO __CMPF121
000a0d f7a9      	BRNE __CMPF122
000a0e 17ea      	CP   R30,R26
000a0f 07fb      	CPC  R31,R27
000a10 0768      	CPC  R22,R24
000a11 f388      	BRLO __CMPF122
000a12 f399      	BREQ __CMPF123
000a13 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000a14 2400      	CLR  R0
000a15 0daf      	ADD  R26,R15
000a16 1db0      	ADC  R27,R0
000a17 9508      	RET
                 
                 __ANEGD1:
000a18 95f0      	COM  R31
000a19 9560      	COM  R22
000a1a 9570      	COM  R23
000a1b 95e1      	NEG  R30
000a1c 4fff      	SBCI R31,-1
000a1d 4f6f      	SBCI R22,-1
000a1e 4f7f      	SBCI R23,-1
000a1f 9508      	RET
                 
                 __CBD1:
000a20 2ffe      	MOV  R31,R30
000a21 0fff      	ADD  R31,R31
000a22 0bff      	SBC  R31,R31
000a23 2f6f      	MOV  R22,R31
000a24 2f7f      	MOV  R23,R31
000a25 9508      	RET
                 
                 __CWD1:
000a26 2f6f      	MOV  R22,R31
000a27 0f66      	ADD  R22,R22
000a28 0b66      	SBC  R22,R22
000a29 2f76      	MOV  R23,R22
000a2a 9508      	RET
                 
                 __DIVB21U:
000a2b 2400      	CLR  R0
000a2c e098      	LDI  R25,8
                 __DIVB21U1:
000a2d 0faa      	LSL  R26
000a2e 1c00      	ROL  R0
000a2f 1a0e      	SUB  R0,R30
000a30 f410      	BRCC __DIVB21U2
000a31 0e0e      	ADD  R0,R30
000a32 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000a33 60a1      	SBR  R26,1
                 __DIVB21U3:
000a34 959a      	DEC  R25
000a35 f7b9      	BRNE __DIVB21U1
000a36 2fea      	MOV  R30,R26
000a37 2da0      	MOV  R26,R0
000a38 9508      	RET
                 
                 __DIVB21:
000a39 d039      	RCALL __CHKSIGNB
000a3a dff0      	RCALL __DIVB21U
000a3b f40e      	BRTC __DIVB211
000a3c 95e1      	NEG  R30
                 __DIVB211:
000a3d 9508      	RET
                 
                 __DIVD21U:
000a3e 933f      	PUSH R19
000a3f 934f      	PUSH R20
000a40 935f      	PUSH R21
000a41 2400      	CLR  R0
000a42 2411      	CLR  R1
000a43 2744      	CLR  R20
000a44 2755      	CLR  R21
000a45 e230      	LDI  R19,32
                 __DIVD21U1:
000a46 0faa      	LSL  R26
000a47 1fbb      	ROL  R27
000a48 1f88      	ROL  R24
000a49 1f99      	ROL  R25
000a4a 1c00      	ROL  R0
000a4b 1c11      	ROL  R1
000a4c 1f44      	ROL  R20
000a4d 1f55      	ROL  R21
000a4e 1a0e      	SUB  R0,R30
000a4f 0a1f      	SBC  R1,R31
000a50 0b46      	SBC  R20,R22
000a51 0b57      	SBC  R21,R23
000a52 f428      	BRCC __DIVD21U2
000a53 0e0e      	ADD  R0,R30
000a54 1e1f      	ADC  R1,R31
000a55 1f46      	ADC  R20,R22
000a56 1f57      	ADC  R21,R23
000a57 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000a58 60a1      	SBR  R26,1
                 __DIVD21U3:
000a59 953a      	DEC  R19
000a5a f759      	BRNE __DIVD21U1
000a5b 01fd      	MOVW R30,R26
000a5c 01bc      	MOVW R22,R24
000a5d 01d0      	MOVW R26,R0
000a5e 01ca      	MOVW R24,R20
000a5f 915f      	POP  R21
000a60 914f      	POP  R20
000a61 913f      	POP  R19
000a62 9508      	RET
                 
                 __MODB21:
000a63 94e8      	CLT
000a64 ffa7      	SBRS R26,7
000a65 c002      	RJMP __MODB211
000a66 95a1      	NEG  R26
000a67 9468      	SET
                 __MODB211:
000a68 fde7      	SBRC R30,7
000a69 95e1      	NEG  R30
000a6a dfc0      	RCALL __DIVB21U
000a6b 2fea      	MOV  R30,R26
000a6c f40e      	BRTC __MODB212
000a6d 95e1      	NEG  R30
                 __MODB212:
000a6e 9508      	RET
                 
                 __MODD21U:
000a6f dfce      	RCALL __DIVD21U
000a70 01fd      	MOVW R30,R26
000a71 01bc      	MOVW R22,R24
000a72 9508      	RET
                 
                 __CHKSIGNB:
000a73 94e8      	CLT
000a74 ffe7      	SBRS R30,7
000a75 c002      	RJMP __CHKSB1
000a76 95e1      	NEG  R30
000a77 9468      	SET
                 __CHKSB1:
000a78 ffa7      	SBRS R26,7
000a79 c004      	RJMP __CHKSB2
000a7a 95a1      	NEG  R26
000a7b f800      	BLD  R0,0
000a7c 9403      	INC  R0
000a7d fa00      	BST  R0,0
                 __CHKSB2:
000a7e 9508      	RET
                 
                 __GETW1P:
000a7f 91ed      	LD   R30,X+
000a80 91fc      	LD   R31,X
000a81 9711      	SBIW R26,1
000a82 9508      	RET
                 
                 __GETD1P:
000a83 91ed      	LD   R30,X+
000a84 91fd      	LD   R31,X+
000a85 916d      	LD   R22,X+
000a86 917c      	LD   R23,X
000a87 9713      	SBIW R26,3
000a88 9508      	RET
                 
                 __GETD1S0:
000a89 81e8      	LD   R30,Y
000a8a 81f9      	LDD  R31,Y+1
000a8b 816a      	LDD  R22,Y+2
000a8c 817b      	LDD  R23,Y+3
000a8d 9508      	RET
                 
                 __GETD2S0:
000a8e 81a8      	LD   R26,Y
000a8f 81b9      	LDD  R27,Y+1
000a90 818a      	LDD  R24,Y+2
000a91 819b      	LDD  R25,Y+3
000a92 9508      	RET
                 
                 __PUTD1S0:
000a93 83e8      	ST   Y,R30
000a94 83f9      	STD  Y+1,R31
000a95 836a      	STD  Y+2,R22
000a96 837b      	STD  Y+3,R23
000a97 9508      	RET
                 
                 __PUTPARD1:
000a98 937a      	ST   -Y,R23
000a99 936a      	ST   -Y,R22
000a9a 93fa      	ST   -Y,R31
000a9b 93ea      	ST   -Y,R30
000a9c 9508      	RET
                 
                 __PUTPARD2:
000a9d 939a      	ST   -Y,R25
000a9e 938a      	ST   -Y,R24
000a9f 93ba      	ST   -Y,R27
000aa0 93aa      	ST   -Y,R26
000aa1 9508      	RET
                 
                 __SWAPD12:
000aa2 2e18      	MOV  R1,R24
000aa3 2f86      	MOV  R24,R22
000aa4 2d61      	MOV  R22,R1
000aa5 2e19      	MOV  R1,R25
000aa6 2f97      	MOV  R25,R23
000aa7 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000aa8 2e1b      	MOV  R1,R27
000aa9 2fbf      	MOV  R27,R31
000aaa 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000aab 2e1a      	MOV  R1,R26
000aac 2fae      	MOV  R26,R30
000aad 2de1      	MOV  R30,R1
000aae 9508      	RET
                 
                 __CPD10:
000aaf 9730      	SBIW R30,0
000ab0 4060      	SBCI R22,0
000ab1 4070      	SBCI R23,0
000ab2 9508      	RET
                 
                 __SAVELOCR6:
000ab3 935a      	ST   -Y,R21
                 __SAVELOCR5:
000ab4 934a      	ST   -Y,R20
                 __SAVELOCR4:
000ab5 933a      	ST   -Y,R19
                 __SAVELOCR3:
000ab6 932a      	ST   -Y,R18
                 __SAVELOCR2:
000ab7 931a      	ST   -Y,R17
000ab8 930a      	ST   -Y,R16
000ab9 9508      	RET
                 
                 __LOADLOCR6:
000aba 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000abb 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000abc 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000abd 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000abe 8119      	LDD  R17,Y+1
000abf 8108      	LD   R16,Y
000ac0 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  62 r1 :  36 r2 :   0 r3 :   0 r4 :   2 r5 :   1 r6 :   2 r7 :   0 
r8 :   2 r9 :   0 r10:   4 r11:   4 r12:   0 r13:   2 r14:   0 r15:   4 
r16:  54 r17:  63 r18:  48 r19:  35 r20:  50 r21:  90 r22: 129 r23: 114 
r24:  74 r25:  72 r26: 236 r27: 110 r28:  30 r29:   1 r30: 407 r31: 166 
x  :  40 y  : 389 z  :  24 
Registers used: 29 out of 35 (82.9%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  21 add   :  14 
adiw  :  32 and   :   5 andi  :  13 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   9 brcs  :   1 break :   0 breq  :  49 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  27 
brlt  :   2 brmi  :  11 brne  :  54 brpl  :   9 brsh  :   7 brtc  :   4 
brts  :   2 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 223 
cbi   :  10 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  51 cls   :   0 clt   :   6 clv   :   0 clz   :   2 com   :   8 
cp    :  14 cpc   :  18 cpi   :  81 cpse  :   0 dec   :  12 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :  12 inc   :   5 jmp   :  26 ld    :  61 ldd   : 191 ldi   : 211 
lds   :  64 lpm   :  12 lsl   :  14 lsr   :   3 mov   :  83 movw  :  55 
mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   2 
ori   :  11 out   :  30 pop   :  24 push  :  24 rcall :  80 ret   : 102 
reti  :   1 rjmp  : 134 rol   :  32 ror   :  15 sbc   :  11 sbci  :  20 
sbi   :  11 sbic  :   0 sbis  :   0 sbiw  :  28 sbr   :   4 sbrc  :   5 
sbrs  :  20 sec   :   5 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   5 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 104 std   :  86 sts   :  34 sub   :   6 subi  :  48 swap  :   2 
tst   :  24 wdr   :   1 
Instructions used: 81 out of 116 (69.8%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001582   5394    112   5506   32768  16.8%
[.dseg] 0x000060 0x0002d8      0    120    120    2048   5.9%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 12 warnings
